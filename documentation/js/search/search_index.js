var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.067,1,2.47]],["body/classes/AllExceptionsFilter.html",[0,0.058,1,3.064,2,1.175,3,0.148,4,0.131,5,0.131,6,4.236,7,3.865,8,2.551,9,1.838,10,4.731,11,0.275,12,0.983,13,5.157,14,1.23,15,3.303,16,6.569,17,0.603,18,2.85,19,1.028,20,0.017,21,0.741,22,0.508,23,0.983,24,4.061,25,4.88,26,4.731,27,5.157,28,3.303,29,3.57,30,0.69,31,3.064,32,0.311,33,5.978,34,0.335,35,2.328,36,0.148,37,1.665,38,2.328,39,1.778,40,3.303,41,3.303,42,2.328,43,2.85,44,2.85,45,2.85,46,3.303,47,3.303,48,4.707,49,2.85,50,2.85,51,1.353,52,2.85,53,2.551,54,3.303,55,3.303,56,3.303,57,0.01,58,0.01]],["title/controllers/AppController.html",[59,1.718,60,2.674]],["body/controllers/AppController.html",[0,0.06,1,2.233,3,0.153,4,0.136,5,0.136,7,2.418,11,0.285,12,1.01,14,1.278,17,0.619,19,0.75,20,0.017,21,0.54,23,0.717,29,2.233,30,1.01,32,0.401,34,0.348,36,0.153,38,2.418,39,1.02,57,0.011,58,0.011,59,2.189,60,3.408,61,1.637,62,2.96,63,3.551,64,5.246,65,4.836,66,1.981,67,3.431,68,2.265,69,3.431,70,3.431,71,3.431,72,3.735,73,2.418,74,1.947,75,2.96,76,2.96,77,2.96,78,2.233,79,3.394,80,2.96,81,2.65,82,2.96,83,2.582,84,4.836,85,3.431,86,2.079,87,3.431,88,2.233,89,3.431,90,0.965,91,3.431,92,3.431,93,3.431,94,3.431,95,3.431,96,3.431]],["title/modules/AppModule.html",[97,1.128,98,2.674]],["body/modules/AppModule.html",[0,0.035,3,0.088,4,0.078,5,0.078,9,0.769,12,0.411,17,0.252,19,0.43,20,0.017,21,0.5,22,0.212,23,0.411,29,1.281,30,0.411,31,1.281,32,0.46,34,0.2,35,1.387,36,0.088,39,0.585,53,3.08,57,0.007,58,0.007,60,2.811,61,1.514,79,3.25,80,1.698,81,1.52,90,0.393,97,1.186,98,4.819,99,0.847,100,1.514,101,1.698,102,1.698,103,1.698,104,3.491,105,3.491,106,3.419,107,3.491,108,3.491,109,1.695,110,1.051,111,1.051,112,1.969,113,1.923,114,1.923,115,3.174,116,3.174,117,4.575,118,1.969,119,1.969,120,1.969,121,3.174,122,1.969,123,1.387,124,1.969,125,1.969,126,1.387,127,1.387,128,1.698,129,1.193,130,2.451,131,1.969,132,1.969,133,1.969,134,2.066,135,1.969,136,1.969,137,3.174,138,1.969,139,2.066,140,1.52,141,1.969,142,1.52,143,1.969,144,1.969,145,0.992,146,2.066,147,1.387,148,1.969,149,1.969,150,1.969,151,1.698,152,1.969,153,1.969,154,1.969,155,1.969,156,2.442,157,1.969,158,1.52,159,1.969,160,1.969,161,1.52,162,1.969,163,1.698,164,1.969,165,1.698,166,1.969,167,1.698,168,1.698,169,1.969,170,1.969,171,1.52,172,1.969,173,1.969,174,1.969,175,1.969,176,1.969,177,1.969,178,3.224,179,1.969,180,1.969,181,1.698,182,1.969,183,2.237,184,1.969,185,1.698,186,1.387,187,1.281,188,1.969,189,1.969,190,1.52,191,1.969,192,1.969,193,1.969,194,1.969,195,1.698,196,1.969,197,3.174,198,1.969,199,1.969]],["title/injectables/AppService.html",[79,2.299,200,0.54]],["body/injectables/AppService.html",[0,0.086,3,0.218,4,0.193,5,0.193,11,0.405,12,1.276,17,0.624,20,0.017,30,1.017,32,0.321,34,0.494,36,0.218,57,0.013,58,0.013,64,6.037,79,3.702,90,0.972,200,0.87,201,1.656,202,4.203,203,4.872,204,1.817,205,3.763,206,4.872]],["title/guards/AuthGaurd.html",[207,2.931,208,2.931]],["body/guards/AuthGaurd.html",[0,0.072,3,0.182,4,0.162,5,0.162,9,2.127,11,0.339,12,1.138,17,0.523,19,0.892,20,0.017,21,0.643,22,0.44,23,0.853,30,0.853,32,0.36,34,0.414,36,0.182,39,1.214,57,0.012,58,0.012,68,2.03,74,3.092,90,0.815,156,2.18,208,4.208,209,3.153,210,3.522,211,6.05,212,3.522,213,3.122,214,4.083,215,2.909,216,4.208,217,3.091,218,1.948,219,3.522,220,3.522]],["title/modules/AuthModule.html",[97,1.128,104,2.47]],["body/modules/AuthModule.html",[0,0.061,3,0.154,4,0.136,5,0.136,20,0.017,32,0.439,34,0.35,36,0.154,57,0.011,58,0.011,78,2.242,97,1.442,99,1.482,100,2.314,104,4.852,109,2.589,110,1.839,111,1.839,113,2.939,114,2.939,221,2.972,222,2.972,223,2.972,224,2.972,225,4.335,226,4.451,227,4.781,228,4.335,229,3.445,230,3.418,231,4.849,232,3.445,233,2.972,234,2.661,235,3.445,236,3.445]],["title/injectables/AuthService.html",[200,0.54,226,2.299]],["body/injectables/AuthService.html",[0,0.067,3,0.17,4,0.151,5,0.151,11,0.316,12,1.084,14,1.416,17,0.665,19,1.134,20,0.017,21,0.818,22,0.56,23,1.084,30,0.794,32,0.343,34,0.386,36,0.17,37,1.916,39,1.13,57,0.011,58,0.011,63,3.157,86,2.303,90,1.036,200,0.739,201,1.292,204,1.758,226,3.146,237,3.279,238,5.192,239,3.801,240,3.851,241,3.801,242,5.192,243,5.192,244,2.309,245,3.606,246,3.801,247,3.279,248,2.936,249,3.801,250,2.98,251,3.801,252,3.801,253,2.474]],["title/classes/Author.html",[0,0.067,254,2.154]],["body/classes/Author.html",[0,0.08,2,1.625,3,0.204,4,0.181,5,0.181,11,0.38,17,0.585,20,0.017,22,0.493,32,0.301,36,0.204,57,0.013,58,0.013,66,1.872,244,2.29,254,3.329,255,3.942,256,1.906,257,5.588,258,3.529,259,3.329,260,5.06,261,5.278,262,5.06,263,4.569,264,4.134,265,5.865,266,2.974]],["title/modules/AuthorsModule.html",[97,1.128,105,2.47]],["body/modules/AuthorsModule.html",[0,0.08,3,0.203,4,0.18,5,0.18,20,0.017,32,0.426,34,0.461,36,0.203,57,0.013,58,0.013,97,1.738,99,1.956,100,2.789,105,4.701,109,3.121,110,2.427,111,2.427,113,3.542,267,3.922,268,3.922,269,4.377,270,4.545,271,4.12,272,4.545,273,3.922]],["title/classes/AuthorsResolver.html",[0,0.067,271,2.674]],["body/classes/AuthorsResolver.html",[0,0.042,2,0.848,3,0.107,4,0.094,5,0.094,11,0.198,12,0.771,14,0.888,17,0.746,19,1.203,20,0.017,21,1.015,22,0.655,23,1.15,30,1.15,32,0.363,36,0.107,37,1.201,38,1.68,57,0.008,58,0.008,66,2.255,90,1.099,244,2.274,254,3.657,264,3.185,266,1.551,269,3.529,271,2.602,273,2.056,274,2.056,275,4.519,276,3.084,277,2.403,278,3.692,279,4.519,280,2.384,281,2.384,282,2.384,283,3.529,284,4.519,285,2.384,286,3.692,287,3.185,288,2.384,289,1.551,290,2.384,291,1.987,292,2.384,293,2.384,294,2.384,295,3.954,296,2.384,297,2.384,298,5.089,299,4.519,300,3.692,301,1.353,302,2.852,303,2.056,304,2.384,305,2.384,306,2.384,307,2.384,308,2.384,309,2.384,310,2.384,311,2.384,312,2.384,313,2.384]],["title/injectables/AuthorsService.html",[200,0.54,269,2.299]],["body/injectables/AuthorsService.html",[0,0.052,3,0.131,4,0.116,5,0.116,11,0.244,12,0.903,17,0.772,19,1.237,20,0.017,21,0.892,22,0.611,23,1.182,30,1.362,32,0.339,34,0.298,36,0.131,51,1.204,57,0.009,58,0.009,90,1.204,200,0.616,201,0.999,204,1.794,244,2.667,254,3.213,269,2.622,276,3.431,277,2.816,283,3.656,287,2.536,289,2.816,291,2.464,295,4.246,301,1.668,302,3.341,303,2.536,314,2.536,315,2.455,316,3.341,317,4.326,318,4.326,319,2.94,320,2.94,321,2.94,322,4.326,323,2.94,324,4.326,325,2.94,326,2.94,327,6.033,328,2.94,329,2.94,330,2.94]],["title/classes/CacheInterceptor.html",[0,0.067,331,2.931]],["body/classes/CacheInterceptor.html",[0,0.071,2,1.432,3,0.18,4,0.16,5,0.16,9,2.108,11,0.335,12,1.127,17,0.516,19,0.88,20,0.017,21,0.634,22,0.434,23,0.841,30,0.841,32,0.356,34,0.409,36,0.18,39,1.197,57,0.012,58,0.012,68,2.011,90,1.077,156,2.15,213,3.105,215,2.882,217,3.07,218,1.921,331,4.169,332,3.474,333,3.691,334,3.691,335,2.621,336,3.456,337,3.943,338,4.027,339,5.398,340,4.027]],["title/classes/Cat.html",[0,0.067,145,1.913]],["body/classes/Cat.html",[0,0.077,2,1.063,3,0.134,4,0.118,5,0.118,11,0.249,14,1.114,17,0.813,19,0.653,20,0.017,21,0.899,22,0.707,23,0.915,32,0.342,36,0.232,39,0.889,57,0.01,58,0.01,66,2.488,129,1.812,145,2.613,146,1.946,156,2.338,183,3.087,185,2.579,186,2.107,187,1.946,204,1.888,244,2.228,245,2.942,256,1.423,291,2.024,341,2.107,342,3.653,343,3.653,344,4.38,345,6.075,346,4.38,347,6.862,348,2.989,349,2.989,350,2.989,351,2.989,352,2.989,353,2.989,354,2.989,355,4.38,356,2.309,357,4.38,358,2.107,359,2.107,360,2.989,361,2.989,362,2.579,363,2.989,364,2.989,365,2.989,366,2.989]],["title/interfaces/CatType.html",[367,1.554,368,2.674]],["body/interfaces/CatType.html",[3,0.201,4,0.178,5,0.178,11,0.374,20,0.016,21,1.07,22,0.733,36,0.201,57,0.013,58,0.013,204,2.142,244,2.812,256,1.887,291,2.653,342,4.789,343,4.789,367,1.843,368,4.093,369,2.726,370,3.882]],["title/controllers/CatsController.html",[59,1.718,134,2.47]],["body/controllers/CatsController.html",[0,0.04,1,1.479,3,0.102,4,0.09,5,0.197,7,1.602,11,0.189,12,0.743,14,0.847,17,0.635,19,0.958,20,0.017,21,0.691,22,0.473,23,0.916,29,1.479,30,1.036,32,0.45,34,0.231,36,0.102,57,0.008,58,0.008,59,1.029,61,1.085,63,3.049,66,2.032,68,1.848,73,2.508,75,1.961,76,1.961,81,1.755,82,1.961,83,2.341,90,0.99,134,2.316,145,1.146,158,1.755,178,1.602,204,0.676,205,1.755,250,1.793,276,3.006,277,2.316,301,1.29,315,2.488,368,1.602,371,1.961,372,1.602,373,3.558,374,2.273,375,3.717,376,2.273,377,2.273,378,2.273,379,2.273,380,3.496,381,2.273,382,2.273,383,3.558,384,2.273,385,4.385,386,2.273,387,2.273,388,1.755,389,2.273,390,2.273,391,2.273,392,2.273,393,2.273,394,1.755,395,1.377,396,1.602,397,2.273,398,1.602,399,2.273,400,2.508,401,2.273,402,1.479,403,2.273,404,2.508,405,2.273,406,1.793,407,1.602,408,1.961,409,2.273,410,1.479,411,2.273,412,2.273,413,2.273,414,1.961,415,2.273,416,2.273,417,1.755,418,2.273,419,2.273,420,2.273,421,2.273,422,2.273,423,2.273,424,2.273,425,2.273,426,2.273,427,2.273,428,2.273,429,1.755,430,2.273,431,2.273,432,2.273,433,2.273,434,2.273,435,2.273,436,2.273,437,2.273,438,1.961,439,1.961,440,2.273,441,2.273]],["title/controllers/CatsDemoController.html",[59,1.718,442,2.931]],["body/controllers/CatsDemoController.html",[0,0.044,3,0.112,4,0.099,5,0.099,11,0.208,12,0.801,17,0.669,19,0.838,20,0.017,21,0.936,22,0.414,23,0.801,30,1.091,31,2.497,32,0.392,34,0.254,36,0.112,37,1.263,39,0.745,51,1.026,57,0.008,58,0.008,59,1.134,61,1.195,66,2.14,72,4.589,73,2.704,74,3.51,90,0.931,139,1.631,145,1.263,156,1.338,178,2.704,204,1.387,217,3.117,218,1.195,250,1.263,276,3.166,301,1.422,315,1.422,372,1.766,375,3.401,388,4.35,395,1.518,406,1.934,407,1.766,408,2.162,410,3.401,414,2.162,417,1.935,429,1.935,442,2.963,443,2.162,444,3.837,445,2.505,446,2.505,447,2.505,448,4.86,449,2.995,450,2.505,451,2.505,452,3.837,453,2.505,454,3.837,455,2.505,456,2.505,457,2.505,458,2.505,459,2.505,460,2.505,461,2.505,462,2.505,463,1.766,464,2.505,465,1.766,466,2.505,467,2.505,468,2.505,469,2.505,470,2.505,471,2.505,472,2.505,473,2.505,474,2.505,475,2.505,476,2.505,477,2.505,478,2.505,479,2.505,480,2.505,481,2.505,482,2.505]],["title/modules/CatsModule.html",[97,1.128,106,2.299]],["body/modules/CatsModule.html",[0,0.061,3,0.155,4,0.137,5,0.137,20,0.017,21,0.545,32,0.424,34,0.351,36,0.155,57,0.011,58,0.011,61,2.32,97,1.446,99,2.092,100,2.32,106,4.151,109,2.596,110,1.846,111,1.846,113,2.947,114,2.096,128,2.984,129,2.096,134,3.661,145,1.743,146,3.165,147,2.437,178,2.437,181,2.984,183,2.437,230,3.427,406,3.705,407,2.437,483,2.984,484,2.984,485,2.984,486,3.458,487,3.458,488,3.458,489,3.458,490,2.437,491,3.458,492,3.458,493,3.458,494,3.458,495,3.458,496,4.863,497,3.458,498,2.096,499,3.458,500,2.984,501,3.458,502,3.458]],["title/injectables/CatsService.html",[200,0.54,406,1.913]],["body/injectables/CatsService.html",[0,0.047,3,0.12,4,0.107,5,0.107,11,0.224,12,0.845,14,1.508,17,0.694,19,1.063,20,0.017,21,0.767,22,0.525,23,1.017,30,1.017,32,0.383,34,0.273,36,0.12,39,1.448,51,1.658,57,0.009,58,0.009,63,3.562,68,2.018,83,2.161,86,2.453,90,1.081,123,1.895,129,1.629,145,3.194,147,1.895,156,1.436,171,2.077,190,2.077,200,0.576,201,0.914,204,1.728,245,1.526,248,2.077,253,1.75,276,3.283,277,2.635,289,2.635,291,1.58,315,2.297,316,2.077,358,1.895,359,1.895,367,1.101,406,2.04,449,1.355,503,2.077,504,2.689,505,4.674,506,5.467,507,2.689,508,3.492,509,3.492,510,2.689,511,2.689,512,2.689,513,2.32,514,1.895,515,4.2,516,2.32,517,2.32,518,2.32,519,2.32,520,2.32,521,2.32,522,2.32,523,2.32,524,2.32,525,2.32,526,2.32,527,2.32,528,2.32,529,2.32,530,1.895,531,2.32]],["title/modules/CommonModule.html",[97,1.128,532,2.931]],["body/modules/CommonModule.html",[0,0.088,3,0.223,4,0.197,5,0.197,20,0.017,32,0.409,34,0.506,36,0.223,57,0.013,58,0.013,97,2.005,99,2.144,106,3.754,114,3.019,532,4.784,533,4.982,534,5.344,535,4.982,536,4.982,537,4.982]],["title/injectables/CommonService.html",[200,0.54,538,2.931]],["body/injectables/CommonService.html",[0,0.078,3,0.198,4,0.176,5,0.176,14,2.142,17,0.567,19,0.968,20,0.017,21,0.698,22,0.478,23,0.925,32,0.379,34,0.45,36,0.198,57,0.013,58,0.013,83,2.366,200,0.819,201,1.506,406,3.529,407,3.123,417,4.93,500,3.823,534,4.961,538,4.441,539,3.823,540,4.431,541,4.431,542,4.431,543,4.431,544,4.431,545,4.431,546,4.431,547,4.431]],["title/classes/CreateAuthorInput.html",[0,0.067,283,2.299]],["body/classes/CreateAuthorInput.html",[0,0.08,2,1.609,3,0.202,4,0.179,5,0.179,11,0.376,17,0.579,20,0.017,22,0.488,32,0.298,36,0.202,57,0.013,58,0.013,66,1.852,244,2.275,256,1.893,257,5.561,258,3.493,259,3.307,260,5.027,261,5.258,262,5.027,264,4.106,266,2.943,283,3.531,548,5.027,549,3.493,550,4.522,551,5.027]],["title/interfaces/CreateCat.html",[367,1.554,410,2.47]],["body/interfaces/CreateCat.html",[3,0.232,4,0.206,5,0.206,11,0.431,20,0.016,22,0.56,36,0.232,57,0.014,58,0.014,204,2.041,256,2.064,367,2.125,369,3.143,410,4.134,429,5.525,552,4.475,553,4.475]],["title/classes/CreateCatDto.html",[0,0.067,375,2.47]],["body/classes/CreateCatDto.html",[0,0.088,2,1.286,3,0.162,4,0.143,5,0.143,11,0.3,17,0.837,20,0.017,21,0.907,22,0.705,23,1.047,32,0.331,34,0.367,36,0.162,57,0.011,58,0.011,66,2.676,204,2.011,244,2.428,245,3.268,256,1.63,291,2.248,342,4.059,343,4.059,375,3.264,554,5.834,555,3.118,556,6.534,557,3.614,558,5.834,559,3.614,560,3.614,561,3.614,562,3.614,563,3.614,564,2.547]],["title/classes/CreateOrderDto.html",[0,0.067,565,2.299]],["body/classes/CreateOrderDto.html",[0,0.086,2,1.733,3,0.218,4,0.193,5,0.193,11,0.405,17,0.782,20,0.016,21,1.051,22,0.659,36,0.218,57,0.013,58,0.013,204,2.081,256,1.985,259,3.788,565,3.702,566,5.758,567,4.203,568,4.872,569,4.872]],["title/classes/CreateOrderEvent.html",[0,0.067,570,2.47]],["body/classes/CreateOrderEvent.html",[0,0.08,2,1.617,3,0.203,4,0.18,5,0.18,11,0.378,14,1.693,17,0.748,19,0.993,20,0.016,21,0.716,22,0.631,23,0.949,32,0.3,36,0.203,57,0.013,58,0.013,256,1.9,301,2.58,565,4.276,570,3.805,571,5.575,572,3.922,573,5.043,574,4.44,575,4.545,576,4.545,577,4.545,578,3.511,579,4.545]],["title/injectables/CreateOrderListener.html",[200,0.54,580,2.47]],["body/injectables/CreateOrderListener.html",[0,0.075,3,0.19,4,0.169,5,0.169,11,0.354,12,1.17,17,0.545,19,0.931,20,0.017,21,0.671,22,0.46,23,0.89,30,0.89,31,2.773,32,0.413,34,0.432,36,0.19,57,0.012,58,0.012,66,1.745,126,3.003,127,3.003,200,0.798,201,1.448,570,4.331,580,3.648,581,4.835,582,3.675,583,5.604,584,5.604,585,5.604,586,4.26,587,4.26,588,4.26,589,3.675,590,3.675,591,4.26,592,4.26,593,4.26]],["title/interfaces/EnvVariables.html",[367,1.554,514,2.674]],["body/interfaces/EnvVariables.html",[0,0.055,3,0.14,4,0.124,5,0.124,11,0.26,14,1.165,20,0.017,22,0.629,32,0.408,34,0.317,36,0.14,39,1.582,51,1.854,57,0.01,58,0.01,63,2.84,68,1.686,83,2.416,86,2.743,90,1.163,123,2.204,129,1.895,145,2.938,147,2.204,156,1.67,171,4.502,190,4.502,200,0.644,204,1.839,245,1.775,253,2.035,256,1.471,276,1.895,289,2.035,291,1.221,316,2.415,358,2.204,359,2.204,367,1.281,369,1.895,406,1.576,449,1.576,503,2.415,505,3.905,506,4.589,508,2.698,509,2.698,513,2.698,514,3.19,515,4.589,516,2.698,517,2.698,518,2.698,519,2.698,520,2.698,521,2.698,522,2.698,523,2.698,524,2.698,525,2.698,526,2.698,527,2.698,528,2.698,529,2.698,530,2.204,531,2.698,594,3.905]],["title/classes/ErrorsInterceptor.html",[0,0.067,595,2.931]],["body/classes/ErrorsInterceptor.html",[0,0.07,2,1.407,3,0.177,4,0.157,5,0.157,9,2.082,11,0.329,12,1.114,17,0.506,19,0.864,20,0.017,21,0.623,22,0.427,23,0.826,30,0.826,32,0.352,34,0.401,36,0.177,51,1.62,57,0.012,58,0.012,68,1.987,90,0.789,213,3.082,215,2.847,217,3.042,218,1.887,333,3.657,334,3.657,335,2.574,336,3.666,337,3.914,595,4.119,596,3.412,597,3.954,598,3.954,599,3.412,600,4.601,601,3.412,602,3.954,603,3.412,604,3.954]],["title/classes/FindOneParams.html",[0,0.067,380,2.674]],["body/classes/FindOneParams.html",[0,0.108,2,1.752,3,0.22,4,0.195,5,0.195,11,0.41,17,0.631,20,0.016,22,0.531,32,0.325,36,0.22,57,0.013,58,0.013,66,2.018,204,1.829,256,1.999,291,2.619,380,4.336,558,5.787,564,3.472,605,4.25,606,4.926]],["title/controllers/HealthController.html",[59,1.718,607,2.674]],["body/controllers/HealthController.html",[0,0.073,3,0.185,4,0.164,5,0.164,11,0.344,12,1.148,14,1.542,17,0.53,20,0.017,30,0.865,32,0.363,34,0.42,36,0.185,57,0.012,58,0.012,59,1.874,61,1.975,66,1.696,83,3.297,90,0.826,372,2.918,607,3.876,608,3.572,609,5.499,610,6.58,611,4.14,612,4.14,613,5.499,614,5.499,615,5.499,616,5.499,617,3.198,618,4.14,619,4.14,620,4.14,621,4.14,622,4.14,623,4.14,624,4.14,625,4.14]],["title/modules/HealthModule.html",[97,1.128,107,2.47]],["body/modules/HealthModule.html",[0,0.084,3,0.213,4,0.189,5,0.189,20,0.017,32,0.458,34,0.484,36,0.213,57,0.013,58,0.013,61,2.875,97,1.792,99,2.051,107,3.922,114,2.889,607,4.657,617,3.681,626,4.767,627,6.025,628,4.112,629,6.025,630,4.767]],["title/classes/HttpExceptionFilter.html",[0,0.067,139,2.47]],["body/classes/HttpExceptionFilter.html",[0,0.067,2,1.346,3,0.169,4,0.15,5,0.15,6,3.998,8,2.923,9,2.021,10,5.09,11,0.315,12,1.081,13,5.09,17,0.485,18,3.265,19,0.827,20,0.017,21,0.596,22,0.408,23,0.79,24,4.466,25,4.899,26,5.09,27,5.472,29,2.463,30,0.79,31,2.463,32,0.342,34,0.384,36,0.169,39,1.886,42,2.668,43,3.265,45,3.265,49,4.466,50,3.265,51,1.55,52,3.265,53,2.923,57,0.011,58,0.011,74,2.938,139,3.369,140,3.998,395,2.294,449,2.609,631,3.785,632,3.785,633,3.785,634,3.785,635,3.785]],["title/injectables/JoiValidationPipe.html",[200,0.54,636,2.931]],["body/injectables/JoiValidationPipe.html",[0,0.068,3,0.172,4,0.153,5,0.153,9,1.503,11,0.32,12,1.094,14,1.434,17,0.671,19,1.144,20,0.017,21,0.825,22,0.565,23,1.094,30,0.804,32,0.346,34,0.391,36,0.172,37,1.941,39,1.145,51,1.577,57,0.011,58,0.011,90,0.769,130,2.974,183,3.692,200,0.746,201,1.309,465,2.714,498,3.174,530,3.692,636,4.046,637,3.322,638,3.851,639,6.389,640,3.851,641,4.519,642,5.136,643,5.512,644,3.851,645,3.322,646,4.519,647,5.238,648,3.851,649,3.851,650,3.851]],["title/modules/LazyModule.html",[88,2.47,97,1.128]],["body/modules/LazyModule.html",[0,0.078,3,0.198,4,0.176,5,0.176,20,0.016,32,0.379,34,0.45,36,0.198,57,0.013,58,0.013,88,4.754,97,1.71,99,1.907,100,2.744,109,3.07,110,2.366,111,2.366,114,3.485,230,4.053,651,3.823,652,3.823,653,3.823,654,4.978,655,4.431,656,4.431]],["title/injectables/LazyService.html",[200,0.54,654,2.47]],["body/injectables/LazyService.html",[0,0.086,3,0.218,4,0.193,5,0.193,11,0.405,12,1.276,17,0.624,20,0.017,30,1.017,32,0.321,34,0.494,36,0.218,57,0.013,58,0.013,90,0.972,200,0.87,201,1.656,204,1.449,205,3.763,654,3.976,657,4.203,658,6.997,659,4.872,660,4.872,661,4.872]],["title/injectables/LocalAuthGuard.html",[200,0.54,227,2.47]],["body/injectables/LocalAuthGuard.html",[0,0.091,3,0.232,4,0.206,5,0.206,20,0.016,32,0.419,34,0.526,36,0.232,57,0.014,58,0.014,77,4.475,78,3.376,200,0.904,201,1.763,227,4.134,662,4.475,663,4.475,664,4.006,665,5.187]],["title/injectables/LocalStrategy.html",[200,0.54,228,2.47]],["body/injectables/LocalStrategy.html",[0,0.06,3,0.153,4,0.136,5,0.136,11,0.285,12,1.01,14,1.278,17,0.619,19,1.056,20,0.017,21,0.762,22,0.522,23,1.01,25,2.65,30,0.717,32,0.423,34,0.348,36,0.153,37,1.73,39,1.02,51,1.406,57,0.011,58,0.011,63,2.99,68,1.801,78,2.233,86,2.079,90,0.685,186,2.418,187,2.233,200,0.688,201,1.166,204,1.665,226,4.031,228,3.148,233,2.96,234,2.65,244,2.186,245,3.451,247,2.96,250,3.065,465,2.418,664,2.65,666,2.96,667,4.172,668,3.431,669,3.431,670,4.836,671,3.431,672,3.431,673,3.431,674,2.96,675,3.431,676,3.431,677,3.431,678,3.431,679,3.431,680,3.431,681,3.431,682,3.431]],["title/injectables/LoggingInterceptor.html",[200,0.54,683,2.931]],["body/injectables/LoggingInterceptor.html",[0,0.07,3,0.177,4,0.157,5,0.157,9,1.544,11,0.329,12,1.114,17,0.506,19,0.864,20,0.017,21,0.623,22,0.427,23,0.826,30,0.826,32,0.352,34,0.401,36,0.177,39,1.176,57,0.012,58,0.012,68,1.987,90,0.789,200,0.759,201,1.344,213,3.082,215,2.847,217,3.042,218,1.887,333,3.232,334,3.657,335,2.574,336,3.666,337,3.914,601,3.412,683,4.119,684,3.412,685,3.954,686,3.954,687,3.954,688,3.954,689,3.954,690,3.954,691,3.954,692,3.954]],["title/injectables/MulterConfigService.html",[200,0.54,490,2.674]],["body/injectables/MulterConfigService.html",[0,0.077,3,0.195,4,0.173,5,0.173,9,1.704,11,0.363,12,1.189,17,0.559,20,0.017,30,0.912,32,0.418,34,0.443,36,0.195,57,0.012,58,0.012,68,2.121,90,0.871,200,0.811,201,1.484,394,4.398,395,2.645,438,3.766,439,3.766,490,4.014,693,3.766,694,6.717,695,4.365,696,6.338,697,5.695,698,4.365,699,4.365]],["title/classes/Order.html",[0,0.067,574,2.47]],["body/classes/Order.html",[0,0.083,2,1.677,3,0.211,4,0.187,5,0.187,11,0.392,17,0.842,20,0.016,21,1.035,22,0.709,36,0.211,57,0.013,58,0.013,204,2.056,244,2.336,256,1.945,259,3.731,291,2.567,574,3.895,700,4.068,701,4.716,702,4.716,703,4.716]],["title/controllers/OrdersController.html",[59,1.718,704,2.674]],["body/controllers/OrdersController.html",[0,0.074,3,0.187,4,0.166,5,0.166,11,0.347,12,1.156,17,0.535,19,0.913,20,0.017,21,0.658,22,0.451,23,0.873,30,0.873,32,0.409,34,0.424,36,0.187,37,2.107,57,0.012,58,0.012,59,1.892,61,1.994,66,1.712,73,4.373,90,0.834,301,2.372,315,3.141,372,2.946,388,3.228,565,4.278,578,3.228,704,3.9,705,3.606,706,3.606,707,3.606,708,4.179,709,3.354,710,3.606,711,4.179,712,4.179,713,4.179,714,4.179]],["title/modules/OrdersModule.html",[97,1.128,108,2.47]],["body/modules/OrdersModule.html",[0,0.074,3,0.187,4,0.166,5,0.166,20,0.017,32,0.436,34,0.424,36,0.187,57,0.012,58,0.012,61,2.64,97,1.646,99,1.798,100,2.64,108,4.759,109,2.955,110,2.231,111,2.231,113,3.354,580,4.595,704,4.373,709,4.278,710,3.606,715,3.606,716,3.606,717,4.179,718,4.179,719,4.179,720,4.179]],["title/injectables/OrdersService.html",[200,0.54,709,2.299]],["body/injectables/OrdersService.html",[0,0.049,3,0.125,4,0.111,5,0.111,11,0.233,12,0.871,14,1.043,17,0.639,19,0.911,20,0.017,21,1.011,22,0.538,23,0.871,30,0.585,32,0.39,34,0.284,36,0.125,37,1.411,39,1.241,51,1.147,57,0.009,58,0.009,90,0.559,126,1.973,127,1.973,200,0.594,201,0.952,256,1.356,259,3.828,291,2.308,301,1.589,315,2.368,463,1.973,498,1.697,565,3.757,570,2.716,573,4.303,574,4.642,578,2.162,589,2.415,590,2.415,706,4.303,707,3.6,709,2.529,721,2.415,722,2.8,723,5.528,724,2.8,725,4.173,726,2.8,727,5.541,728,4.788,729,2.8,730,2.8,731,2.8,732,2.8,733,4.173,734,2.8,735,2.8,736,2.8]],["title/interfaces/Response.html",[367,1.554,449,1.913]],["body/interfaces/Response.html",[0,0.073,3,0.186,4,0.165,5,0.165,9,1.624,11,0.346,20,0.017,22,0.449,32,0.364,34,0.422,36,0.247,57,0.012,58,0.012,68,1.549,90,0.83,200,0.785,213,2.632,215,2.221,217,2.781,218,1.985,253,2.707,256,1.793,333,3.343,334,2.521,336,2.361,337,3.343,367,1.704,369,2.521,402,2.707,449,2.781,737,3.213,738,4.969,739,5.34,740,3.589,741,3.589]],["title/guards/RolesGuard.html",[207,2.931,398,2.674]],["body/guards/RolesGuard.html",[0,0.06,3,0.152,4,0.134,5,0.134,9,1.324,11,0.282,12,1.002,14,1.263,17,0.614,19,1.048,20,0.017,21,0.755,22,0.517,23,1.002,30,0.708,32,0.399,34,0.344,35,2.391,36,0.152,37,1.71,39,1.655,57,0.01,58,0.01,68,1.787,74,2.722,90,0.957,156,2.561,200,0.683,209,2.62,211,5.507,212,2.926,213,2.886,215,2.561,216,3.705,217,2.805,218,1.618,219,2.926,220,2.926,395,2.055,396,3.381,398,3.381,742,2.926,743,3.392,744,6.626,745,3.392,746,3.392,747,3.392,748,3.392,749,4.797,750,3.392,751,3.392,752,3.392]],["title/classes/TimeoutInterceptor.html",[0,0.067,400,2.674]],["body/classes/TimeoutInterceptor.html",[0,0.065,2,1.323,3,0.166,4,0.147,5,0.147,9,1.998,11,0.309,12,1.069,17,0.476,19,0.813,20,0.017,21,0.586,22,0.401,23,0.777,30,0.777,32,0.338,34,0.378,36,0.166,44,3.21,51,1.524,57,0.011,58,0.011,68,1.906,90,1.167,213,3.005,215,2.732,217,2.947,218,1.775,333,3.544,334,3.544,335,2.422,336,3.319,337,3.816,400,3.606,599,3.21,600,5.045,603,3.21,753,3.21,754,3.721,755,5.117,756,3.721,757,5.117,758,3.721,759,3.721,760,3.721,761,5.117]],["title/injectables/TransformInterceptor.html",[200,0.54,402,2.47]],["body/injectables/TransformInterceptor.html",[0,0.068,3,0.174,4,0.154,5,0.154,9,1.517,11,0.323,12,1.1,17,0.497,19,0.849,20,0.017,21,0.612,22,0.419,23,0.811,30,0.811,32,0.348,34,0.394,36,0.235,57,0.011,58,0.011,68,1.963,90,0.775,200,0.75,201,1.32,213,3.059,215,2.813,217,3.014,218,1.854,253,2.529,333,3.193,334,3.624,335,2.529,336,3.394,337,3.886,367,1.591,402,3.43,449,1.958,737,3,738,4.215,739,3.352,740,3.352,741,3.352,762,3.885]],["title/classes/UpdateAuthorInput.html",[0,0.067,295,2.47]],["body/classes/UpdateAuthorInput.html",[0,0.08,2,1.617,3,0.203,4,0.18,5,0.18,11,0.378,17,0.582,20,0.017,22,0.49,32,0.386,36,0.203,57,0.013,58,0.013,66,1.862,244,2.282,256,1.9,258,3.511,261,4.515,264,4.12,266,2.959,283,2.755,291,2.523,295,3.805,302,3.511,315,2.58,549,3.511,551,5.043,664,3.511,763,5.043,764,4.545,765,4.545,766,4.545]],["title/interfaces/UserEntity.html",[367,1.554,767,2.931]],["body/interfaces/UserEntity.html",[3,0.179,4,0.159,5,0.159,11,0.333,20,0.017,21,1.023,22,0.655,32,0.264,34,0.407,36,0.241,39,1.807,42,2.825,57,0.012,58,0.012,74,2.275,90,0.8,204,2.119,213,2.568,244,2.372,250,3.062,256,1.749,291,2.536,367,1.642,369,2.429,738,3.793,767,4.157,768,3.096,769,6.495,770,4.643,771,3.458,772,3.458,773,3.458]],["title/modules/UsersModule.html",[97,1.128,225,2.47]],["body/modules/UsersModule.html",[0,0.078,3,0.198,4,0.176,5,0.176,20,0.016,32,0.379,34,0.45,36,0.198,57,0.013,58,0.013,97,1.71,99,1.907,100,2.744,109,3.07,110,2.366,111,2.366,113,3.485,225,4.754,230,4.053,240,4.634,774,3.823,775,3.823,776,3.823,777,4.431,778,4.431]],["title/injectables/UsersService.html",[200,0.54,240,2.299]],["body/injectables/UsersService.html",[0,0.056,3,0.143,4,0.127,5,0.127,11,0.267,12,0.962,17,0.59,19,0.7,20,0.017,21,0.505,22,0.582,23,0.67,30,0.67,32,0.212,34,0.325,36,0.206,38,3.802,39,0.954,57,0.01,58,0.01,63,2.88,68,1.717,83,2.88,90,0.64,186,2.26,187,2.087,200,0.656,201,1.09,204,1.37,240,2.793,244,2.303,245,3.546,250,3.377,256,1.498,277,3,289,3,291,2.616,463,2.26,498,1.943,727,5.088,728,4.555,779,2.477,780,6.247,781,3.207,782,6.247,783,4.609,784,4.609,785,3.207,786,3.207,787,3.207]],["title/injectables/ValidationPipe.html",[200,0.54,404,2.674]],["body/injectables/ValidationPipe.html",[0,0.096,3,0.145,4,0.129,5,0.129,9,1.27,11,0.271,12,0.973,17,0.596,19,1.017,20,0.017,21,0.734,22,0.502,23,0.973,30,0.973,32,0.359,34,0.33,36,0.145,39,1.617,51,1.333,57,0.01,58,0.01,63,2.904,83,2.904,86,1.972,90,1.085,200,0.663,201,1.106,204,0.968,216,4.201,244,1.27,248,2.513,356,2.513,404,3.282,465,2.294,498,3.598,530,3.282,564,2.294,641,4.018,643,5.122,645,2.807,646,4.018,667,2.807,788,2.807,789,4.657,790,4.657,791,5.122,792,3.254,793,5.439,794,3.254,795,3.254,796,3.254,797,3.254,798,4.657,799,3.254,800,3.254,801,3.254,802,3.254,803,3.254,804,3.254,805,3.254,806,3.254,807,3.254]],["title/coverage.html",[808,4.005]],["body/coverage.html",[0,0.118,1,1.229,5,0.075,6,2.37,7,1.331,8,2.37,20,0.017,22,0.204,51,0.774,57,0.007,58,0.007,59,2.223,60,1.331,62,1.629,79,1.144,97,0.562,134,1.229,139,1.229,140,1.459,142,1.459,145,0.952,146,1.229,200,0.965,202,1.629,207,2.37,208,1.459,210,1.629,226,1.144,227,1.229,228,1.229,237,1.629,240,1.144,250,0.952,254,1.072,255,1.629,269,1.144,271,1.331,274,1.629,283,1.144,295,1.229,314,1.629,331,1.459,332,1.629,341,2.163,367,2.012,368,1.331,370,1.629,371,1.629,375,1.229,380,1.331,396,1.331,398,1.331,400,1.331,402,1.229,404,1.331,406,0.952,410,1.229,442,1.459,443,1.629,449,0.952,490,1.331,503,2.37,514,1.331,538,1.459,539,1.629,548,1.629,549,2.37,552,1.629,553,1.629,554,1.629,555,1.629,565,1.144,566,1.629,567,1.629,570,1.229,571,1.629,572,1.629,574,1.229,580,1.229,581,1.629,582,1.629,595,1.459,596,1.629,605,1.629,607,1.331,608,1.629,636,1.459,637,1.629,654,1.229,657,1.629,662,1.629,663,1.629,666,1.629,683,1.459,684,1.629,693,1.629,700,1.629,704,1.331,705,1.629,709,1.144,721,1.629,737,2.37,742,1.629,753,1.629,763,1.629,767,1.459,768,2.37,779,1.459,788,1.629,791,1.629,808,1.459,809,1.888,810,1.888,811,1.888,812,7.676,813,6.283,814,7.017,815,5.778,816,3.069,817,3.069,818,4.465,819,1.629,820,5.262,821,1.629,822,1.629,823,3.877,824,2.37,825,1.629,826,1.629,827,1.888,828,1.888]],["title/dependencies.html",[100,2.178,829,2.731]],["body/dependencies.html",[0,0.094,20,0.017,34,0.403,35,2.8,57,0.012,58,0.012,78,2.585,100,1.895,123,2.8,126,2.8,127,2.8,129,2.407,130,3.068,158,3.068,218,1.895,234,3.068,266,2.585,356,3.068,358,2.8,394,3.068,395,3.242,564,2.8,617,3.068,628,3.427,642,3.427,674,4.615,830,3.972,831,6.048,832,3.972,833,3.972,834,3.972,835,3.972,836,3.972,837,3.972,838,3.972,839,3.972,840,3.972,841,3.972,842,3.972,843,3.972,844,3.972,845,3.972,846,3.972,847,3.972,848,3.972,849,3.972,850,3.972,851,3.972,852,3.972,853,3.972,854,3.972,855,3.972]],["title/miscellaneous/functions.html",[856,1.918,857,3.939]],["body/miscellaneous/functions.html",[11,0.476,20,0.015,57,0.015,58,0.015,824,4.422,825,6.178,856,3.47,857,4.94,858,4.94]],["title/index.html",[11,0.263,859,3.165,860,3.165]],["body/index.html",[4,0.147,20,0.016,57,0.011,58,0.011,167,3.197,168,4.402,187,2.412,254,2.103,259,2.103,808,2.862,861,3.705,862,3.705,863,5.102,864,3.705,865,3.705,866,3.705,867,3.705,868,3.705,869,3.705,870,5.835,871,3.705,872,3.705,873,3.705,874,3.705,875,6.981,876,3.705,877,3.705,878,3.705,879,6.814,880,3.705,881,3.705,882,5.102,883,3.705,884,3.705,885,3.705,886,5.102,887,3.705,888,3.705,889,3.705,890,5.102,891,5.102,892,3.705,893,3.705,894,3.705,895,3.705,896,3.705,897,3.197,898,3.705,899,3.705,900,3.705,901,3.705,902,3.705,903,3.705,904,3.705,905,3.705,906,3.705,907,3.705,908,3.705,909,3.705,910,3.705,911,3.705,912,3.705,913,3.197]],["title/modules.html",[99,2.231]],["body/modules.html",[20,0.013,57,0.013,58,0.013,88,3.021,98,3.271,99,1.997,104,3.021,105,3.021,106,2.813,107,3.021,108,3.021,225,3.021,532,3.585,897,6.369,914,7.382,915,7.382,916,7.547,917,5.924,918,5.924]],["title/overview.html",[919,4.474]],["body/overview.html",[2,0.996,20,0.016,57,0.009,58,0.009,61,1.336,79,3.023,88,3.848,98,5.073,99,1.205,100,1.991,101,2.415,102,2.415,103,2.415,104,4.642,105,3.848,106,3.757,107,3.247,108,4.18,109,2.228,110,1.495,111,1.495,151,3.6,201,0.952,209,2.162,221,2.415,222,2.415,223,2.415,224,2.415,225,4.035,226,3.892,227,4.18,228,3.247,240,3.892,267,2.415,268,2.415,269,3.023,369,1.697,406,3.237,483,2.415,484,2.415,485,2.415,580,3.247,651,2.415,652,2.415,653,2.415,654,4.18,709,3.023,715,2.415,716,2.415,728,2.162,774,2.415,775,2.415,776,2.415,919,2.415,920,2.8,921,2.8,922,2.8]],["title/properties.html",[256,1.484,829,2.731]],["body/properties.html",[20,0.017,57,0.014,58,0.014,254,3.188,256,1.825,259,3.188,913,4.846,923,5.616,924,5.616,925,5.616]],["title/miscellaneous/typealiases.html",[856,1.918,926,4.566]],["body/miscellaneous/typealiases.html",[11,0.458,20,0.014,22,0.711,57,0.014,58,0.014,250,3.321,341,3.884,359,4.643,594,4.755,779,4.256,856,3.34,927,5.511,928,4.755,929,5.511]],["title/miscellaneous/variables.html",[161,3.526,856,1.918]],["body/miscellaneous/variables.html",[11,0.303,20,0.017,21,0.574,22,0.393,39,1.5,42,2.568,57,0.011,58,0.011,72,2.814,74,3.283,90,0.727,97,1.5,142,3.895,146,3.283,161,2.814,163,3.144,165,4.351,195,3.144,204,1.5,213,1.739,250,3.146,291,1.423,336,2.862,341,2.568,342,2.568,343,2.568,362,3.144,396,4.399,448,3.144,449,1.837,463,4.619,498,3.971,738,3.555,768,2.814,770,3.144,771,3.144,772,3.144,773,3.144,819,3.144,821,4.351,822,3.144,824,2.814,826,3.144,856,2.208,858,3.144,928,3.144,930,3.644,931,3.644,932,3.644,933,3.644,934,5.043,935,3.644,936,3.644,937,3.644]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":924,"title":{},"body":{"properties.html":{}}}],["0.0.8",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":727,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["10.0.13",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":922,"title":{},"body":{"overview.html":{}}}],["16",{"_index":921,"title":{},"body":{"overview.html":{}}}],["17.6.0",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":728,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["2.0.1",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":464,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["3.0.2",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["3.6.3",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":682,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["4.4.0",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["5.2.1",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["8.0.6",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":920,"title":{},"body":{"overview.html":{}}}],["9.0.3",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":526,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["ab_cd",{"_index":480,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["abortearly",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["action",{"_index":327,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["adds",{"_index":328,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["admin",{"_index":752,"title":{},"body":{"guards/RolesGuard.html":{}}}],["age",{"_index":342,"title":{},"body":{"classes/Cat.html":{},"interfaces/CatType.html":{},"classes/CreateCatDto.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":927,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["allowunknown",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["amazing",{"_index":898,"title":{},"body":{"index.html":{}}}],["app",{"_index":877,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":60,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":869,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":98,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":79,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":297,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["args('createauthorinput",{"_index":305,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["args('updateauthorinput",{"_index":310,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["argumentmetadata",{"_index":643,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":806,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["auth.guard",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":663,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["authgaurd",{"_index":208,"title":{"guards/AuthGaurd.html":{}},"body":{"guards/AuthGaurd.html":{},"coverage.html":{}}}],["authguard",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('local",{"_index":665,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":104,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":254,"title":{"classes/Author.html":{}},"body":{"classes/Author.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["author.input",{"_index":302,"title":{},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/UpdateAuthorInput.html":{}}}],["author.input.ts",{"_index":549,"title":{},"body":{"classes/CreateAuthorInput.html":{},"classes/UpdateAuthorInput.html":{},"coverage.html":{}}}],["author.input.ts:6",{"_index":550,"title":{},"body":{"classes/CreateAuthorInput.html":{}}}],["author.input.ts:7",{"_index":764,"title":{},"body":{"classes/UpdateAuthorInput.html":{}}}],["authors",{"_index":287,"title":{},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{}}}],["authors.resolver",{"_index":272,"title":{},"body":{"modules/AuthorsModule.html":{}}}],["authors.service",{"_index":273,"title":{},"body":{"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{}}}],["authors/authors.module",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["authorsmodule",{"_index":105,"title":{"modules/AuthorsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorsModule.html":{},"modules.html":{},"overview.html":{}}}],["authorsresolver",{"_index":271,"title":{"classes/AuthorsResolver.html":{}},"body":{"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"coverage.html":{}}}],["authorsservice",{"_index":269,"title":{"injectables/AuthorsService.html":{}},"body":{"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":226,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":918,"title":{},"body":{"modules.html":{}}}],["await",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"injectables/LocalStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["backers",{"_index":899,"title":{},"body":{"index.html":{}}}],["badgatewayexception",{"_index":598,"title":{},"body":{"classes/ErrorsInterceptor.html":{}}}],["badgatewayexception(err",{"_index":604,"title":{},"body":{"classes/ErrorsInterceptor.html":{}}}],["badrequestexception",{"_index":645,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":649,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["badrequestexception(json.stringify(errors[0].constraints",{"_index":804,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["before",{"_index":365,"title":{},"body":{"classes/Cat.html":{}}}],["body",{"_index":388,"title":{},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"controllers/OrdersController.html":{}}}],["body(new",{"_index":425,"title":{},"body":{"controllers/CatsController.html":{}}}],["boolean",{"_index":216,"title":{},"body":{"guards/AuthGaurd.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["breed",{"_index":343,"title":{},"body":{"classes/Cat.html":{},"interfaces/CatType.html":{},"classes/CreateCatDto.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":916,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":914,"title":{},"body":{"modules.html":{}}}],["building",{"_index":864,"title":{},"body":{"index.html":{}}}],["cache",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":331,"title":{"classes/CacheInterceptor.html":{}},"body":{"classes/CacheInterceptor.html":{},"coverage.html":{}}}],["cachemanager",{"_index":421,"title":{},"body":{"controllers/CatsController.html":{}}}],["cachemodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["callhandler",{"_index":337,"title":{},"body":{"classes/CacheInterceptor.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":211,"title":{},"body":{"guards/AuthGaurd.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":212,"title":{},"body":{"guards/AuthGaurd.html":{},"guards/RolesGuard.html":{}}}],["cat",{"_index":145,"title":{"classes/Cat.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"coverage.html":{}}}],["cat(cat",{"_index":528,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["cat.dto",{"_index":408,"title":{},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{}}}],["cat.dto.ts",{"_index":555,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:12",{"_index":557,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:15",{"_index":559,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:19",{"_index":563,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:6",{"_index":560,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:9",{"_index":561,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.interface",{"_index":412,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.interface.ts",{"_index":553,"title":{},"body":{"interfaces/CreateCat.html":{},"coverage.html":{}}}],["cat.name",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["catch",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":631,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":599,"title":{},"body":{"classes/ErrorsInterceptor.html":{},"classes/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":603,"title":{},"body":{"classes/ErrorsInterceptor.html":{},"classes/TimeoutInterceptor.html":{}}}],["catdocument",{"_index":359,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"miscellaneous/typealiases.html":{}}}],["catmodel",{"_index":508,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["cats",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{}}}],["cats.controller",{"_index":487,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.module",{"_index":535,"title":{},"body":{"modules/CommonModule.html":{}}}],["cats.service",{"_index":407,"title":{},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CommonService.html":{}}}],["cats/cats.controller",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.module",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["catschema",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["catschema.pre('save",{"_index":363,"title":{},"body":{"classes/Cat.html":{}}}],["catscontroller",{"_index":134,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsdemocontroller",{"_index":442,"title":{"controllers/CatsDemoController.html":{}},"body":{"controllers/CatsDemoController.html":{},"coverage.html":{}}}],["catservice",{"_index":417,"title":{},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CommonService.html":{}}}],["catsmodule",{"_index":106,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":406,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"interfaces/EnvVariables.html":{},"coverage.html":{},"overview.html":{}}}],["cattype",{"_index":368,"title":{"interfaces/CatType.html":{}},"body":{"interfaces/CatType.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["check",{"_index":610,"title":{},"body":{"controllers/HealthController.html":{}}}],["circular",{"_index":544,"title":{},"body":{"injectables/CommonService.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/Author.html":{},"classes/AuthorsResolver.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"classes/CreateAuthorInput.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"classes/HttpExceptionFilter.html":{},"classes/Order.html":{},"classes/TimeoutInterceptor.html":{},"classes/UpdateAuthorInput.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Author.html":{},"classes/AuthorsResolver.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"classes/CreateAuthorInput.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"classes/HttpExceptionFilter.html":{},"classes/Order.html":{},"classes/TimeoutInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":389,"title":{},"body":{"controllers/CatsController.html":{}}}],["cluster_appmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorsmodule",{"_index":267,"title":{},"body":{"modules/AuthorsModule.html":{},"overview.html":{}}}],["cluster_authorsmodule_providers",{"_index":268,"title":{},"body":{"modules/AuthorsModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":483,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":484,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":485,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_lazymodule",{"_index":651,"title":{},"body":{"modules/LazyModule.html":{},"overview.html":{}}}],["cluster_lazymodule_exports",{"_index":652,"title":{},"body":{"modules/LazyModule.html":{},"overview.html":{}}}],["cluster_lazymodule_imports",{"_index":653,"title":{},"body":{"modules/LazyModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":715,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":716,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":774,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":775,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":776,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["commonmodule",{"_index":532,"title":{"modules/CommonModule.html":{}},"body":{"modules/CommonModule.html":{},"modules.html":{}}}],["commonservice",{"_index":538,"title":{"injectables/CommonService.html":{}},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["config/configuration",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":506,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["configuration",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":419,"title":{},"body":{"controllers/CatsController.html":{}}}],["connection",{"_index":496,"title":{},"body":{"modules/CatsModule.html":{}}}],["connectionname",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('before",{"_index":687,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log('file",{"_index":441,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log('im",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["console.log('injected",{"_index":426,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log('logger",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('order.create",{"_index":591,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["console.log('this",{"_index":478,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["console.log('url",{"_index":523,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["console.log('username",{"_index":469,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["console.log(`${doc.id",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(`after.....${date.now",{"_index":691,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(body",{"_index":473,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["console.log(cat",{"_index":517,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["console.log(createauthorinput",{"_index":326,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["console.log(doc.id",{"_index":364,"title":{},"body":{"classes/Cat.html":{}}}],["console.log(err",{"_index":760,"title":{},"body":{"classes/TimeoutInterceptor.html":{}}}],["console.log(errors",{"_index":803,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["console.log(event",{"_index":593,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["console.log(exception",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["console.log(moduleref",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(req.body",{"_index":470,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["console.log(req.url",{"_index":482,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["console.log(req.user",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(user",{"_index":680,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["console.log(userrole",{"_index":751,"title":{},"body":{"guards/RolesGuard.html":{}}}],["const",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/AuthorsResolver.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"classes/CreateOrderEvent.html":{},"interfaces/EnvVariables.html":{},"controllers/HealthController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{}}}],["constructor(authorsservice",{"_index":280,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["constructor(authservice",{"_index":668,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(catmodel",{"_index":504,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(catservice",{"_index":540,"title":{},"body":{"injectables/CommonService.html":{}}}],["constructor(eventemitter",{"_index":722,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(httpadapterhost",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(order",{"_index":575,"title":{},"body":{"classes/CreateOrderEvent.html":{}}}],["constructor(partial",{"_index":344,"title":{},"body":{"classes/Cat.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/AuthorsResolver.html":{},"controllers/CatsDemoController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{}}}],["constructor(public",{"_index":579,"title":{},"body":{"classes/CreateOrderEvent.html":{}}}],["constructor(reflector",{"_index":743,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(schema",{"_index":638,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["constructor(userservice",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logger).forroutes",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":215,"title":{},"body":{"guards/AuthGaurd.html":{},"classes/CacheInterceptor.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["context.gethandler",{"_index":748,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":219,"title":{},"body":{"guards/AuthGaurd.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":59,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":414,"title":{},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{}}}],["controller('health",{"_index":618,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('orders",{"_index":711,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controllers",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["coverage",{"_index":808,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":315,"title":{},"body":{"injectables/AuthorsService.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateAuthorInput.html":{}}}],["create(@body",{"_index":713,"title":{},"body":{"controllers/OrdersController.html":{}}}],["create(cat",{"_index":509,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["create(createauthorinput",{"_index":318,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["create(createcatdto",{"_index":374,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createorderdto",{"_index":707,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createauthor",{"_index":275,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["createauthor(createauthorinput",{"_index":282,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["createauthorinput",{"_index":283,"title":{"classes/CreateAuthorInput.html":{}},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CreateAuthorInput.html":{},"classes/UpdateAuthorInput.html":{},"coverage.html":{}}}],["createcat",{"_index":410,"title":{"interfaces/CreateCat.html":{}},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"interfaces/CreateCat.html":{},"coverage.html":{}}}],["createcatdto",{"_index":375,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["createcatschema",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":430,"title":{},"body":{"controllers/CatsController.html":{}}}],["createdcat",{"_index":518,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["createdcat.save",{"_index":520,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["createdorderevent",{"_index":733,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createmulteroptions",{"_index":694,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createorderdto",{"_index":565,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["createorderevent",{"_index":570,"title":{"classes/CreateOrderEvent.html":{}},"body":{"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["createorderlistener",{"_index":580,"title":{"injectables/CreateOrderListener.html":{}},"body":{"injectables/CreateOrderListener.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"overview.html":{}}}],["createparamdecorator",{"_index":770,"title":{},"body":{"interfaces/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["ctx",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":633,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":632,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":771,"title":{},"body":{"interfaces/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":738,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["date().toisostring",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["date.now",{"_index":689,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["db",{"_index":620,"title":{},"body":{"controllers/HealthController.html":{}}}],["decorators",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"classes/Author.html":{},"classes/AuthorsResolver.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"classes/CreateAuthorInput.html":{},"classes/CreateCatDto.html":{},"injectables/CreateOrderListener.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{},"classes/UpdateAuthorInput.html":{}}}],["decorators/roles.decorator",{"_index":397,"title":{},"body":{"controllers/CatsController.html":{}}}],["default",{"_index":463,"title":{},"body":{"controllers/CatsDemoController.html":{},"injectables/OrdersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LazyService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["demo",{"_index":456,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["dependencies",{"_index":100,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorsModule.html":{},"modules/CatsModule.html":{},"modules/LazyModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":545,"title":{},"body":{"injectables/CommonService.html":{}}}],["description",{"_index":259,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorInput.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"index.html":{},"properties.html":{}}}],["dest",{"_index":438,"title":{},"body":{"controllers/CatsController.html":{},"injectables/MulterConfigService.html":{}}}],["development",{"_index":878,"title":{},"body":{"index.html":{}}}],["doc",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{}}}],["docs",{"_index":623,"title":{},"body":{"controllers/HealthController.html":{}}}],["document",{"_index":357,"title":{},"body":{"classes/Cat.html":{}}}],["documentation",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":301,"title":{},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"classes/CreateOrderEvent.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["dto/update",{"_index":303,"title":{},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{}}}],["e2e",{"_index":887,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":865,"title":{},"body":{"index.html":{}}}],["el.id",{"_index":787,"title":{},"body":{"injectables/UsersService.html":{}}}],["email",{"_index":769,"title":{},"body":{"interfaces/UserEntity.html":{}}}],["emitter",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateOrderListener.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["entities/author.entity",{"_index":304,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["entities/order.entity",{"_index":730,"title":{},"body":{"injectables/OrdersService.html":{}}}],["environment",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["envvariables",{"_index":514,"title":{"interfaces/EnvVariables.html":{}},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"coverage.html":{}}}],["err",{"_index":761,"title":{},"body":{"classes/TimeoutInterceptor.html":{}}}],["error",{"_index":647,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["errors",{"_index":800,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":802,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errorsinterceptor",{"_index":595,"title":{"classes/ErrorsInterceptor.html":{}},"body":{"classes/ErrorsInterceptor.html":{},"coverage.html":{}}}],["event",{"_index":587,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["eventemitter",{"_index":725,"title":{},"body":{"injectables/OrdersService.html":{}}}],["eventemitter2",{"_index":723,"title":{},"body":{"injectables/OrdersService.html":{}}}],["eventemittermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["events/create",{"_index":589,"title":{},"body":{"injectables/CreateOrderListener.html":{},"injectables/OrdersService.html":{}}}],["example",{"_index":260,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorInput.html":{}}}],["examplefield",{"_index":257,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorInput.html":{}}}],["exception",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filters",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["exception.filters.ts",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filters.ts:11",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filters.ts:14",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":355,"title":{},"body":{"classes/Cat.html":{}}}],["executioncontext",{"_index":213,"title":{},"body":{"guards/AuthGaurd.html":{},"classes/CacheInterceptor.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LazyModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":395,"title":{},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":385,"title":{},"body":{"controllers/CatsController.html":{}}}],["express/multer/interfaces/multer",{"_index":698,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extends",{"_index":664,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateAuthorInput.html":{}}}],["failed",{"_index":650,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["false",{"_index":220,"title":{},"body":{"guards/AuthGaurd.html":{},"guards/RolesGuard.html":{}}}],["field",{"_index":261,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorInput.html":{},"classes/UpdateAuthorInput.html":{}}}],["field(undefined",{"_index":258,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorInput.html":{},"classes/UpdateAuthorInput.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":393,"title":{},"body":{"controllers/CatsController.html":{}}}],["filters/all",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["filters/http",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["findall",{"_index":276,"title":{},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["findall(req",{"_index":447,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["findone",{"_index":277,"title":{},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["findone(@args('id",{"_index":308,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["findone(@param",{"_index":434,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":289,"title":{},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"injectables/UsersService.html":{}}}],["findone(params",{"_index":379,"title":{},"body":{"controllers/CatsController.html":{}}}],["findoneparams",{"_index":380,"title":{"classes/FindOneParams.html":{}},"body":{"controllers/CatsController.html":{},"classes/FindOneParams.html":{},"coverage.html":{}}}],["forbiddenexception",{"_index":466,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["forward",{"_index":536,"title":{},"body":{"modules/CommonModule.html":{}}}],["forwardref",{"_index":534,"title":{},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{}}}],["framework",{"_index":863,"title":{},"body":{"index.html":{}}}],["function",{"_index":791,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["functions",{"_index":857,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":432,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(':id')@useinterceptors(classserializerinterceptor",{"_index":381,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('ab*cd",{"_index":452,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["get('observable",{"_index":454,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["get()@healthcheck",{"_index":611,"title":{},"body":{"controllers/HealthController.html":{}}}],["getall",{"_index":658,"title":{},"body":{"injectables/LazyService.html":{}}}],["getanyroute",{"_index":444,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["getanyroute(@req",{"_index":477,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["getanyroute(req",{"_index":451,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["gethello",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":859,"title":{"index.html":{}},"body":{}}],["graph",{"_index":917,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":894,"title":{},"body":{"index.html":{}}}],["guard",{"_index":207,"title":{"guards/AuthGaurd.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":209,"title":{},"body":{"guards/AuthGaurd.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/roles.guard",{"_index":399,"title":{},"body":{"controllers/CatsController.html":{}}}],["guidelines",{"_index":494,"title":{},"body":{"modules/CatsModule.html":{}}}],["handle",{"_index":601,"title":{},"body":{"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{}}}],["handleordercreatedevent",{"_index":583,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["handleordercreatedevent(event",{"_index":584,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["health",{"_index":609,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":630,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":613,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":614,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":607,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":107,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":205,"title":{},"body":{"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/LazyService.html":{}}}],["here",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["host",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["http",{"_index":619,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpadapter",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":457,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["httpcode(200",{"_index":462,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["httpexception",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{}}}],["httpexception('error",{"_index":681,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["httpexceptionfilter",{"_index":139,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsDemoController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httphealthindicator",{"_index":615,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":627,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://docs.nestjs.com",{"_index":624,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://docs.nestjs.com/fundamentals/dynamic",{"_index":492,"title":{},"body":{"modules/CatsModule.html":{}}}],["https://docs.nestjs.com/modules",{"_index":502,"title":{},"body":{"modules/CatsModule.html":{}}}],["https://docs.nestjs.com/techniques/configuration#cache",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":910,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["id",{"_index":291,"title":{},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/EnvVariables.html":{},"classes/FindOneParams.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGaurd.html":{},"classes/CacheInterceptor.html":{},"classes/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/LazyModule.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LazyService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infer",{"_index":522,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["inject",{"_index":542,"title":{},"body":{"injectables/CommonService.html":{}}}],["inject('connection",{"_index":418,"title":{},"body":{"controllers/CatsController.html":{}}}],["inject(cache_manager",{"_index":420,"title":{},"body":{"controllers/CatsController.html":{}}}],["inject(forwardref",{"_index":547,"title":{},"body":{"injectables/CommonService.html":{}}}],["injectable",{"_index":200,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AuthorsService.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/CreateOrderListener.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"injectables/OrdersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AuthorsService.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":201,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AuthorsService.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/CreateOrderListener.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"injectables/OrdersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":513,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["injectmodel(cat.name",{"_index":516,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["inputtype",{"_index":551,"title":{},"body":{"classes/CreateAuthorInput.html":{},"classes/UpdateAuthorInput.html":{}}}],["installation",{"_index":874,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":876,"title":{},"body":{"index.html":{}}}],["instance",{"_index":501,"title":{},"body":{"modules/CatsModule.html":{}}}],["instanceof",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/TimeoutInterceptor.html":{}}}],["int",{"_index":264,"title":{},"body":{"classes/Author.html":{},"classes/AuthorsResolver.html":{},"classes/CreateAuthorInput.html":{},"classes/UpdateAuthorInput.html":{}}}],["intercept",{"_index":334,"title":{},"body":{"classes/CacheInterceptor.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":335,"title":{},"body":{"classes/CacheInterceptor.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptors/timeout.interceptor",{"_index":401,"title":{},"body":{"controllers/CatsController.html":{}}}],["interceptors/transform.interceptor",{"_index":403,"title":{},"body":{"controllers/CatsController.html":{}}}],["interface",{"_index":367,"title":{"interfaces/CatType.html":{},"interfaces/CreateCat.html":{},"interfaces/EnvVariables.html":{},"interfaces/Response.html":{},"interfaces/UserEntity.html":{}},"body":{"interfaces/CatType.html":{},"injectables/CatsService.html":{},"interfaces/CreateCat.html":{},"interfaces/EnvVariables.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserEntity.html":{},"coverage.html":{}}}],["interfaces",{"_index":369,"title":{},"body":{"interfaces/CatType.html":{},"interfaces/CreateCat.html":{},"interfaces/EnvVariables.html":{},"interfaces/Response.html":{},"interfaces/UserEntity.html":{},"overview.html":{}}}],["interfaces/cat.interface",{"_index":409,"title":{},"body":{"controllers/CatsController.html":{}}}],["interfaces/create",{"_index":411,"title":{},"body":{"controllers/CatsController.html":{}}}],["iscached",{"_index":339,"title":{},"body":{"classes/CacheInterceptor.html":{}}}],["isglobal",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":556,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":558,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/FindOneParams.html":{}}}],["isstring()@optional",{"_index":562,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["joi",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"injectables/JoiValidationPipe.html":{},"dependencies.html":{}}}],["joi.number",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":901,"title":{},"body":{"index.html":{}}}],["joivalidationpipe",{"_index":636,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["joivalidationpipe(createcatschema",{"_index":424,"title":{},"body":{"controllers/CatsController.html":{}}}],["kamil",{"_index":907,"title":{},"body":{"index.html":{}}}],["laze.service",{"_index":656,"title":{},"body":{"modules/LazyModule.html":{}}}],["lazy",{"_index":660,"title":{},"body":{"injectables/LazyService.html":{}}}],["lazymodule",{"_index":88,"title":{"modules/LazyModule.html":{}},"body":{"controllers/AppController.html":{},"modules/LazyModule.html":{},"modules.html":{},"overview.html":{}}}],["lazymoduleloader",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["lazyservice",{"_index":654,"title":{"injectables/LazyService.html":{}},"body":{"modules/LazyModule.html":{},"injectables/LazyService.html":{},"coverage.html":{},"overview.html":{}}}],["lean",{"_index":527,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["license",{"_index":913,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":891,"title":{},"body":{"index.html":{}}}],["listener",{"_index":592,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["listeners/created",{"_index":718,"title":{},"body":{"modules/OrdersModule.html":{}}}],["literal",{"_index":594,"title":{},"body":{"interfaces/EnvVariables.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":227,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["localstrategy",{"_index":228,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logginginterceptor",{"_index":683,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["login",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["login(@request",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["manager",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":740,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["message",{"_index":429,"title":{},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"interfaces/CreateCat.html":{}}}],["metadata",{"_index":642,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"dependencies.html":{}}}],["metatype",{"_index":793,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"injectables/CreateOrderListener.html":{},"classes/ErrorsInterceptor.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LazyService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["middleware",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["middlewareconsumer",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/logger.middleware",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":856,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":890,"title":{},"body":{"index.html":{}}}],["mode",{"_index":882,"title":{},"body":{"index.html":{}}}],["model",{"_index":505,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["module",{"_index":97,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorsModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/LazyModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorsModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/LazyModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["moduleref",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["modules",{"_index":99,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorsModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/HealthModule.html":{},"modules/LazyModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules#community",{"_index":493,"title":{},"body":{"modules/CatsModule.html":{}}}],["mongoose",{"_index":358,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":616,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["mongoosemodule.forfeature",{"_index":491,"title":{},"body":{"modules/CatsModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forroot(process.env.mongo_url",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":904,"title":{},"body":{"index.html":{}}}],["multerconfigservice",{"_index":490,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/CatsModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule.registerasync",{"_index":488,"title":{},"body":{"modules/CatsModule.html":{}}}],["multeroptions",{"_index":696,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":697,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mutation",{"_index":298,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["mutation(undefined",{"_index":284,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["myśliwiec",{"_index":908,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"classes/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":870,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":912,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":333,"title":{},"body":{"classes/CacheInterceptor.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/axios",{"_index":628,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorsModule.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateCatDto.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/CreateOrderListener.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":266,"title":{},"body":{"classes/Author.html":{},"classes/AuthorsResolver.html":{},"classes/CreateAuthorInput.html":{},"classes/UpdateAuthorInput.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":394,"title":{},"body":{"controllers/CatsController.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":617,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthorsService.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"classes/TimeoutInterceptor.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":336,"title":{},"body":{"classes/CacheInterceptor.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle",{"_index":340,"title":{},"body":{"classes/CacheInterceptor.html":{}}}],["next.handle().pipe",{"_index":758,"title":{},"body":{"classes/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":741,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nextfunction",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.js",{"_index":862,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["now",{"_index":688,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":692,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":875,"title":{},"body":{"index.html":{}}}],["null",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["number",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"classes/Author.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"classes/CreateAuthorInput.html":{},"classes/CreateCatDto.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":798,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.assign(this",{"_index":361,"title":{},"body":{"classes/Cat.html":{}}}],["objectschema",{"_index":639,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["objecttype",{"_index":265,"title":{},"body":{"classes/Author.html":{}}}],["observable",{"_index":217,"title":{},"body":{"guards/AuthGaurd.html":{},"classes/CacheInterceptor.html":{},"controllers/CatsDemoController.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["onevent",{"_index":588,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["onevent('order.create",{"_index":585,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["open",{"_index":892,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"classes/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["options.interface",{"_index":699,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["order",{"_index":574,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderEvent.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["order.description",{"_index":735,"title":{},"body":{"injectables/OrdersService.html":{}}}],["order.dto",{"_index":578,"title":{},"body":{"classes/CreateOrderEvent.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["order.dto.ts",{"_index":567,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:2",{"_index":569,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:3",{"_index":568,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.event",{"_index":590,"title":{},"body":{"injectables/CreateOrderListener.html":{},"injectables/OrdersService.html":{}}}],["order.event.ts",{"_index":572,"title":{},"body":{"classes/CreateOrderEvent.html":{},"coverage.html":{}}}],["order.event.ts:3",{"_index":576,"title":{},"body":{"classes/CreateOrderEvent.html":{}}}],["order.event.ts:4",{"_index":577,"title":{},"body":{"classes/CreateOrderEvent.html":{}}}],["order.listeners",{"_index":719,"title":{},"body":{"modules/OrdersModule.html":{}}}],["order.listeners.ts",{"_index":582,"title":{},"body":{"injectables/CreateOrderListener.html":{},"coverage.html":{}}}],["order.listeners.ts:8",{"_index":586,"title":{},"body":{"injectables/CreateOrderListener.html":{}}}],["order.name",{"_index":734,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders",{"_index":706,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["orders.controller",{"_index":720,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":710,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["orderscontroller",{"_index":704,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["orderservice",{"_index":712,"title":{},"body":{"controllers/OrdersController.html":{}}}],["ordersmodule",{"_index":108,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":709,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorsModule.html":{},"modules/CatsModule.html":{},"modules/LazyModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":919,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":829,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":390,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"classes/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["params",{"_index":383,"title":{},"body":{"controllers/CatsController.html":{}}}],["partial",{"_index":345,"title":{},"body":{"classes/Cat.html":{}}}],["partialtype",{"_index":765,"title":{},"body":{"classes/UpdateAuthorInput.html":{}}}],["partialtype(createauthorinput",{"_index":766,"title":{},"body":{"classes/UpdateAuthorInput.html":{}}}],["passport",{"_index":674,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":672,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":676,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":467,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["password",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/EnvVariables.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["path",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["pipe",{"_index":602,"title":{},"body":{"classes/ErrorsInterceptor.html":{}}}],["pipe(tap",{"_index":690,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipes/validation.pipe",{"_index":405,"title":{},"body":{"controllers/CatsController.html":{}}}],["pipetransform",{"_index":646,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["placeholder",{"_index":262,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorInput.html":{}}}],["plaintoclass",{"_index":796,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":799,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":902,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["post",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"controllers/OrdersController.html":{}}}],["post('/auth/login",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["post('upload",{"_index":436,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":386,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@httpcode(200",{"_index":445,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["post()@roles('admin",{"_index":376,"title":{},"body":{"controllers/CatsController.html":{}}}],["pre",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":372,"title":{},"body":{"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"controllers/HealthController.html":{},"controllers/OrdersController.html":{}}}],["private",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"interfaces/EnvVariables.html":{},"controllers/HealthController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":861,"title":{},"body":{"index.html":{}}}],["project",{"_index":893,"title":{},"body":{"index.html":{}}}],["promise",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGaurd.html":{},"classes/CacheInterceptor.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":347,"title":{},"body":{"classes/Cat.html":{}}}],["prop()@exclude",{"_index":353,"title":{},"body":{"classes/Cat.html":{}}}],["prop({required",{"_index":350,"title":{},"body":{"classes/Cat.html":{}}}],["properties",{"_index":256,"title":{"properties.html":{}},"body":{"classes/Author.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"interfaces/EnvVariables.html":{},"classes/FindOneParams.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["property",{"_index":531,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["provide",{"_index":495,"title":{},"body":{"modules/CatsModule.html":{}}}],["providers",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorsModule.html":{},"modules/CatsModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{}}}],["provision",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":573,"title":{},"body":{"classes/CreateOrderEvent.html":{},"injectables/OrdersService.html":{}}}],["query",{"_index":299,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["query(undefined",{"_index":286,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["reaching",{"_index":678,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["read",{"_index":903,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AuthorsResolver.html":{},"injectables/UsersService.html":{}}}],["recommended",{"_index":459,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["reference",{"_index":537,"title":{},"body":{"modules/CommonModule.html":{}}}],["reflect",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":744,"title":{},"body":{"guards/RolesGuard.html":{}}}],["remove",{"_index":316,"title":{},"body":{"injectables/AuthorsService.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["remove(id",{"_index":322,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["removeauthor",{"_index":278,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["removeauthor(@args('id",{"_index":312,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["removeauthor(id",{"_index":292,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["removes",{"_index":330,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["repository",{"_index":873,"title":{},"body":{"index.html":{}}}],["req",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsDemoController.html":{},"miscellaneous/variables.html":{}}}],["req.params",{"_index":471,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["req.query",{"_index":472,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["req.user",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGaurd.html":{},"controllers/CatsDemoController.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"interfaces/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["request.query.role",{"_index":750,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request.url",{"_index":635,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":772,"title":{},"body":{"interfaces/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["requestmethod.get",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["requesttimeoutexception",{"_index":755,"title":{},"body":{"classes/TimeoutInterceptor.html":{}}}],["required",{"_index":360,"title":{},"body":{"classes/Cat.html":{}}}],["res",{"_index":448,"title":{},"body":{"controllers/CatsDemoController.html":{},"miscellaneous/variables.html":{}}}],["res.status(200).json(result",{"_index":476,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["reset",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorsModule.html":{},"modules/CatsModule.html":{},"modules/LazyModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":300,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["response",{"_index":449,"title":{"interfaces/Response.html":{}},"body":{"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.status(statuscode).json",{"_index":634,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["responsebody",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":474,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"controllers/HealthController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LazyService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":475,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"injectables/CreateOrderListener.html":{},"classes/ErrorsInterceptor.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LazyService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["rimraf",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":396,"title":{},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":422,"title":{},"body":{"controllers/CatsController.html":{}}}],["rolesguard",{"_index":398,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["route",{"_index":479,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["routermodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.register",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":879,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":218,"title":{},"body":{"guards/AuthGaurd.html":{},"classes/CacheInterceptor.html":{},"controllers/CatsDemoController.html":{},"classes/ErrorsInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["same",{"_index":500,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CommonService.html":{}}}],["saved",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["saving",{"_index":366,"title":{},"body":{"classes/Cat.html":{}}}],["scalable",{"_index":866,"title":{},"body":{"index.html":{}}}],["schema",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"modules/CatsModule.html":{},"injectables/JoiValidationPipe.html":{}}}],["schema.pre('save",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["schema/cat.schema",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["schemafactory",{"_index":354,"title":{},"body":{"classes/Cat.html":{}}}],["schemafactory.createforclass(cat",{"_index":362,"title":{},"body":{"classes/Cat.html":{},"miscellaneous/variables.html":{}}}],["serialization",{"_index":529,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["server",{"_index":867,"title":{},"body":{"index.html":{}}}],["service",{"_index":661,"title":{},"body":{"injectables/LazyService.html":{}}}],["setmetadata('roles",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["share",{"_index":499,"title":{},"body":{"modules/CatsModule.html":{}}}],["side",{"_index":868,"title":{},"body":{"index.html":{}}}],["solve",{"_index":543,"title":{},"body":{"injectables/CommonService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGaurd.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"modules/AuthorsModule.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"modules/LazyModule.html":{},"injectables/LazyService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MulterConfigService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":896,"title":{},"body":{"index.html":{}}}],["src/.../cat.schema.ts",{"_index":928,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../cats.validation.ts",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":858,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":929,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:21",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:29",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:76",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":202,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":203,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:5",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/local",{"_index":662,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":666,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:13",{"_index":671,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":669,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/authors/authors.module.ts",{"_index":270,"title":{},"body":{"modules/AuthorsModule.html":{}}}],["src/authors/authors.resolver.ts",{"_index":274,"title":{},"body":{"classes/AuthorsResolver.html":{},"coverage.html":{}}}],["src/authors/authors.resolver.ts:12",{"_index":285,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["src/authors/authors.resolver.ts:19",{"_index":288,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["src/authors/authors.resolver.ts:24",{"_index":290,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["src/authors/authors.resolver.ts:29",{"_index":296,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["src/authors/authors.resolver.ts:36",{"_index":293,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["src/authors/authors.resolver.ts:8",{"_index":281,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["src/authors/authors.service.ts",{"_index":314,"title":{},"body":{"injectables/AuthorsService.html":{},"coverage.html":{}}}],["src/authors/authors.service.ts:13",{"_index":320,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["src/authors/authors.service.ts:17",{"_index":321,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["src/authors/authors.service.ts:21",{"_index":325,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["src/authors/authors.service.ts:25",{"_index":323,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["src/authors/authors.service.ts:8",{"_index":319,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["src/authors/dto/create",{"_index":548,"title":{},"body":{"classes/CreateAuthorInput.html":{},"coverage.html":{}}}],["src/authors/dto/update",{"_index":763,"title":{},"body":{"classes/UpdateAuthorInput.html":{},"coverage.html":{}}}],["src/authors/entities/author.entity.ts",{"_index":255,"title":{},"body":{"classes/Author.html":{},"coverage.html":{}}}],["src/authors/entities/author.entity.ts:6",{"_index":263,"title":{},"body":{"classes/Author.html":{}}}],["src/cats/cat.controller.demo.ts",{"_index":443,"title":{},"body":{"controllers/CatsDemoController.html":{},"coverage.html":{}}}],["src/cats/cat.controller.demo.ts:24",{"_index":446,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["src/cats/cat.controller.demo.ts:30",{"_index":450,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["src/cats/cat.controller.demo.ts:44",{"_index":453,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["src/cats/cat.controller.demo.ts:50",{"_index":455,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["src/cats/cats.controller.ts",{"_index":371,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:38",{"_index":377,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:47",{"_index":378,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:53",{"_index":382,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:59",{"_index":387,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":486,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":503,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:14",{"_index":507,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:20",{"_index":510,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:26",{"_index":511,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:32",{"_index":512,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.validation.ts",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cats/common.module.ts",{"_index":533,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/cats/common.service.ts",{"_index":539,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/cats/common.service.ts:5",{"_index":541,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/cats/dto/create",{"_index":554,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":370,"title":{},"body":{"interfaces/CatType.html":{},"coverage.html":{}}}],["src/cats/interfaces/create",{"_index":552,"title":{},"body":{"interfaces/CreateCat.html":{},"coverage.html":{}}}],["src/cats/validation/cat.findonaparams.ts",{"_index":605,"title":{},"body":{"classes/FindOneParams.html":{},"coverage.html":{}}}],["src/cats/validation/cat.findonaparams.ts:5",{"_index":606,"title":{},"body":{"classes/FindOneParams.html":{}}}],["src/decorators/roles.decorator.ts",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/user.decorator",{"_index":458,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["src/decorators/user.decorator.ts",{"_index":768,"title":{},"body":{"interfaces/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exception",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts",{"_index":210,"title":{},"body":{"guards/AuthGaurd.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts:5",{"_index":214,"title":{},"body":{"guards/AuthGaurd.html":{}}}],["src/guards/roles.guard.ts",{"_index":742,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:10",{"_index":746,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/guards/roles.guard.ts:7",{"_index":745,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/health/health.controller.ts",{"_index":608,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:19",{"_index":612,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":626,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/interceptors/cache.interceptor.ts",{"_index":332,"title":{},"body":{"classes/CacheInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/cache.interceptor.ts:4",{"_index":338,"title":{},"body":{"classes/CacheInterceptor.html":{}}}],["src/interceptors/errors.interceptor.ts",{"_index":596,"title":{},"body":{"classes/ErrorsInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/errors.interceptor.ts:10",{"_index":597,"title":{},"body":{"classes/ErrorsInterceptor.html":{}}}],["src/interceptors/logging.interceptor.ts",{"_index":684,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/logging.interceptor.ts:11",{"_index":685,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/interceptors/timeout.interceptor.ts",{"_index":753,"title":{},"body":{"classes/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/timeout.interceptor.ts:16",{"_index":754,"title":{},"body":{"classes/TimeoutInterceptor.html":{}}}],["src/interceptors/transform.interceptor.ts",{"_index":737,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/transform.interceptor.ts:17",{"_index":762,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/lazy/laze.service.ts",{"_index":657,"title":{},"body":{"injectables/LazyService.html":{},"coverage.html":{}}}],["src/lazy/laze.service.ts:5",{"_index":659,"title":{},"body":{"injectables/LazyService.html":{}}}],["src/lazy/lazy.module.ts",{"_index":655,"title":{},"body":{"modules/LazyModule.html":{}}}],["src/main.ts",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/logger.middleware.ts",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/multer/multer.service.ts",{"_index":693,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/multer/multer.service.ts:6",{"_index":695,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/orders/dto/create",{"_index":566,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/orders/entities/order.entity.ts",{"_index":700,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/orders/entities/order.entity.ts:2",{"_index":702,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/entities/order.entity.ts:3",{"_index":703,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/entities/order.entity.ts:4",{"_index":701,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/events/create",{"_index":571,"title":{},"body":{"classes/CreateOrderEvent.html":{},"coverage.html":{}}}],["src/orders/listeners/created",{"_index":581,"title":{},"body":{"injectables/CreateOrderListener.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts",{"_index":705,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:10",{"_index":708,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":717,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":721,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/orders.service.ts:20",{"_index":724,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:24",{"_index":726,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:9",{"_index":729,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/pipes/joivalidation.pipe.ts",{"_index":637,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/pipes/joivalidation.pipe.ts:10",{"_index":640,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["src/pipes/joivalidation.pipe.ts:13",{"_index":644,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["src/pipes/validation.pipe.ts",{"_index":788,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/pipes/validation.pipe.ts:13",{"_index":795,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/pipes/validation.pipe.ts:28",{"_index":792,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/schema/cat.schema.ts",{"_index":341,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schema/cat.schema.ts:10",{"_index":351,"title":{},"body":{"classes/Cat.html":{}}}],["src/schema/cat.schema.ts:12",{"_index":352,"title":{},"body":{"classes/Cat.html":{}}}],["src/schema/cat.schema.ts:14",{"_index":348,"title":{},"body":{"classes/Cat.html":{}}}],["src/schema/cat.schema.ts:17",{"_index":349,"title":{},"body":{"classes/Cat.html":{}}}],["src/schema/cat.schema.ts:22",{"_index":346,"title":{},"body":{"classes/Cat.html":{}}}],["src/users/users.module.ts",{"_index":777,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":675,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/users/users.service.ts",{"_index":779,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/users.service.ts:11",{"_index":785,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":781,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":880,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":883,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":884,"title":{},"body":{"index.html":{}}}],["started",{"_index":860,"title":{"index.html":{}},"body":{}}],["starter",{"_index":872,"title":{},"body":{"index.html":{}}}],["statements",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":905,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":673,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["string",{"_index":204,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AuthorsService.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"interfaces/EnvVariables.html":{},"classes/FindOneParams.html":{},"injectables/LazyService.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":677,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":897,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":915,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":739,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":686,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["terminusmodule",{"_index":629,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["test:covsupport",{"_index":889,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":888,"title":{},"body":{"index.html":{}}}],["tests",{"_index":886,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":895,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authorsservice.create(createauthorinput",{"_index":306,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["this.authorsservice.findall",{"_index":307,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["this.authorsservice.findone(id",{"_index":309,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["this.authorsservice.remove(id",{"_index":313,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["this.authorsservice.update(updateauthorinput.id",{"_index":311,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["this.authservice.validateuser(userid",{"_index":679,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.catmodel(cat",{"_index":519,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["this.catmodel.find().lean",{"_index":524,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["this.catmodel.findone",{"_index":525,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["this.catservice.create(createcatdto",{"_index":428,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.findall",{"_index":431,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.findone(params.id",{"_index":435,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.configservice.get('database.url",{"_index":521,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["this.connect",{"_index":427,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.db.pingcheck('mongodb",{"_index":625,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.eventemitter.emit('order.create",{"_index":736,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.health.check",{"_index":621,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('nestjs",{"_index":622,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpadapterhost",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.lazymoduleloader.load",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["this.orders.length",{"_index":731,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orders.push(order",{"_index":732,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orderservice.create(createorderdto",{"_index":714,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.reflector.get('roles",{"_index":747,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.schema.validate(value",{"_index":648,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["this.tovalidate(metatype",{"_index":797,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.users.find((el",{"_index":786,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone(userid",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":465,"title":{},"body":{"controllers/CatsDemoController.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["throwerror",{"_index":600,"title":{},"body":{"classes/ErrorsInterceptor.html":{},"classes/TimeoutInterceptor.html":{}}}],["timeout",{"_index":756,"title":{},"body":{"classes/TimeoutInterceptor.html":{}}}],["timeout(5000",{"_index":759,"title":{},"body":{"classes/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":757,"title":{},"body":{"classes/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":400,"title":{"classes/TimeoutInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"classes/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timestamp",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["touch",{"_index":906,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":789,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":790,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":530,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":641,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":356,"title":{},"body":{"classes/Cat.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":402,"title":{"injectables/TransformInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGaurd.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{},"guards/RolesGuard.html":{}}}],["ttl",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":911,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGaurd.html":{},"injectables/AuthService.html":{},"classes/Author.html":{},"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/CacheInterceptor.html":{},"classes/Cat.html":{},"interfaces/CatType.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"classes/CreateAuthorInput.html":{},"interfaces/CreateCat.html":{},"classes/CreateCatDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderEvent.html":{},"injectables/CreateOrderListener.html":{},"interfaces/EnvVariables.html":{},"classes/ErrorsInterceptor.html":{},"classes/FindOneParams.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"classes/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAuthorInput.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":926,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":805,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":807,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":871,"title":{},"body":{"index.html":{}}}],["ui",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":794,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["unit",{"_index":885,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/ValidationPipe.html":{}}}],["unlicensed",{"_index":925,"title":{},"body":{"properties.html":{}}}],["update",{"_index":317,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["update(id",{"_index":324,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["updateauthor",{"_index":279,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["updateauthor(updateauthorinput",{"_index":294,"title":{},"body":{"classes/AuthorsResolver.html":{}}}],["updateauthorinput",{"_index":295,"title":{"classes/UpdateAuthorInput.html":{}},"body":{"classes/AuthorsResolver.html":{},"injectables/AuthorsService.html":{},"classes/UpdateAuthorInput.html":{},"coverage.html":{}}}],["updates",{"_index":329,"title":{},"body":{"injectables/AuthorsService.html":{}}}],["upload",{"_index":439,"title":{},"body":{"controllers/CatsController.html":{},"injectables/MulterConfigService.html":{}}}],["uploadedfile",{"_index":391,"title":{},"body":{"controllers/CatsController.html":{}}}],["uploadfile",{"_index":373,"title":{},"body":{"controllers/CatsController.html":{}}}],["uploadfile(@uploadedfile",{"_index":440,"title":{},"body":{"controllers/CatsController.html":{}}}],["uploadfile(file",{"_index":384,"title":{},"body":{"controllers/CatsController.html":{}}}],["url",{"_index":515,"title":{},"body":{"injectables/CatsService.html":{},"interfaces/EnvVariables.html":{}}}],["useclass",{"_index":489,"title":{},"body":{"modules/CatsModule.html":{}}}],["usefactory",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["usefilters",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["usefilters(allexceptionsfilter",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["usefilters(new",{"_index":461,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["useguards",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["useguards(authguard('local",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(rolesguard",{"_index":415,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards(undefined)@post('/auth/login",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":392,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":433,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":437,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(transforminterceptor",{"_index":416,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes(new",{"_index":423,"title":{},"body":{"controllers/CatsController.html":{}}}],["user",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CatsController.html":{},"controllers/CatsDemoController.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserEntity.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user('name",{"_index":468,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["user.password",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["user1",{"_index":783,"title":{},"body":{"injectables/UsersService.html":{}}}],["user2",{"_index":784,"title":{},"body":{"injectables/UsersService.html":{}}}],["user?.[data",{"_index":773,"title":{},"body":{"interfaces/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":767,"title":{"interfaces/UserEntity.html":{}},"body":{"interfaces/UserEntity.html":{},"coverage.html":{}}}],["userid",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["username",{"_index":782,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":749,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":780,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":778,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/users.service",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservice",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":225,"title":{"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":240,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":497,"title":{},"body":{"modules/CatsModule.html":{}}}],["using",{"_index":546,"title":{},"body":{"injectables/CommonService.html":{}}}],["v1",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["valid('development",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":667,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":801,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(userid",{"_index":670,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(userid",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation/cat.findonaparams",{"_index":413,"title":{},"body":{"controllers/CatsController.html":{}}}],["validationoptions",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["validationpipe",{"_index":404,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validationschema",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":564,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/FindOneParams.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":498,"title":{},"body":{"modules/CatsModule.html":{},"injectables/JoiValidationPipe.html":{},"injectables/OrdersService.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":161,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":923,"title":{},"body":{"properties.html":{}}}],["void",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/CatsDemoController.html":{},"injectables/CreateOrderListener.html":{},"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":881,"title":{},"body":{"index.html":{}}}],["way",{"_index":460,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["website",{"_index":909,"title":{},"body":{"index.html":{}}}],["wildcard",{"_index":481,"title":{},"body":{"controllers/CatsDemoController.html":{}}}],["working",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":206,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":900,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorsModule.html":{},"modules/CatsModule.html":{},"modules/LazyModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/all-exception.filters.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/exception-filters/all-exception.filters.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/all-exception.filters.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: HttpException, host: ArgumentsHost): void {\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    console.log(exception);\n    const responseBody = {\n      statusCode: httpStatus,\n      timeStamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n      exception: exception.message,\n    };\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('/auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Request,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AppService } from './app.service';\nimport { AllExceptionsFilter } from './exception-filters/all-exception.filters';\n\n@Controller()\n@UseFilters(AllExceptionsFilter)\nexport class AppController {\n  constructor(\n    private readonly appService: AppService, // private lazyModuleLoader: LazyModuleLoader,\n  ) {}\n\n  @Get()\n  async getHello(): Promise {\n    // const moduleRef = await this.lazyModuleLoader.load(() => LazyModule);\n    // console.log(moduleRef);\n    return this.appService.getHello();\n  }\n\n  @UseGuards(AuthGuard('local'))\n  @Post('/auth/login')\n  async login(@Request() req): Promise {\n    console.log(req.user);\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthorsModule\n\nAuthorsModule\n\nAppModule -->\n\nAuthorsModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AuthorsModule\n                        \n                        \n                            CatsModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            OrdersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  CacheModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n} from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { RouterModule } from '@nestjs/core';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport * as Joi from 'joi';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthorsModule } from './authors/authors.module';\nimport { CatsController } from './cats/cats.controller';\nimport { CatsModule } from './cats/cats.module';\nimport configuration from './config/configuration';\nimport { HttpExceptionFilter } from './exception-filters/http-exception.filters';\nimport { HealthModule } from './health/health.module';\nimport { logger } from './middlewares/logger.middleware';\nimport { OrdersModule } from './orders/orders.module';\nimport { Cat, CatSchema } from './schema/cat.schema';\n\n@Module({\n  imports: [\n    OrdersModule,\n    EventEmitterModule.forRoot(),\n    CacheModule.register({ ttl: 5, max: 10 }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n      cache: true, // https://docs.nestjs.com/techniques/configuration#cache-environment-variables,\n      validationSchema: Joi.object({\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test', 'provision')\n          .default('development'),\n        PORT: Joi.number().default(3000),\n      }),\n      validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n      },\n    }),\n    CatsModule,\n    MongooseModule.forRoot(process.env.MONGO_URL, {\n      connectionName: 'cats',\n    }),\n    MongooseModule.forFeatureAsync(\n      [\n        // Not working\n        {\n          name: Cat.name,\n          useFactory: () => {\n            const schema = CatSchema;\n            schema.pre('save', (doc: any) => {\n              console.log('im here!');\n              console.log(`${doc.id} is saved on database on pre plugin!`);\n            });\n            return schema;\n          },\n        },\n      ],\n      'cats',\n    ),\n    AuthModule,\n    AuthorsModule,\n    RouterModule.register([{ path: 'v1', module: CatsModule }]),\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, HttpExceptionFilter],\n})\nexport class AppModule implements NestModule {\n  // Configure Middleware\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(logger).forRoutes(\n      // { path: 'cats', method: RequestMethod.GET },\n      // { path: 'cats', method: RequestMethod.POST },\n      CatsController,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGaurd.html":{"url":"guards/AuthGaurd.html","title":"guard - AuthGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                                CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\nexport class AuthGaurd implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    return request ? true : false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nLocalAuthGuard \n\nLocalAuthGuard \n\nLocalAuthGuard  -->\n\nAuthModule->LocalAuthGuard \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalAuthGuard\n\nLocalAuthGuard\n\nAuthModule -->\n\nLocalAuthGuard->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalAuthGuard\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalAuthGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from './../users/users.module';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [UsersModule, PassportModule],\n  providers: [AuthService, LocalStrategy, LocalAuthGuard],\n  exports: [AuthService, LocalAuthGuard],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(userId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from './../users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private userService: UsersService) {}\n\n  async validateUser(userId: number, password: string) {\n    const user = await this.userService.findOne(userId);\n    if (user && user.password === password) {\n      return user;\n    }\n\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Author.html":{"url":"classes/Author.html","title":"class - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authors/entities/author.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exampleField\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        exampleField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Example field (placeholder)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authors/entities/author.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Author {\n  @Field(() => Int, { description: 'Example field (placeholder)' })\n  exampleField: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorsModule.html":{"url":"modules/AuthorsModule.html","title":"module - AuthorsModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorsModule\n\n\n\ncluster_AuthorsModule_providers\n\n\n\n\nAuthorsService\n\nAuthorsService\n\n\n\nAuthorsModule\n\nAuthorsModule\n\nAuthorsModule -->\n\nAuthorsService->AuthorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authors/authors.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthorsResolver } from './authors.resolver';\nimport { AuthorsService } from './authors.service';\n\n@Module({\n  providers: [AuthorsResolver, AuthorsService],\n})\nexport class AuthorsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorsResolver.html":{"url":"classes/AuthorsResolver.html","title":"class - AuthorsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authors/authors.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAuthor\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                removeAuthor\n                            \n                            \n                                updateAuthor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorsService: AuthorsService)\n                    \n                \n                        \n                            \n                                Defined in src/authors/authors.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorsService\n                                                  \n                                                        \n                                                                        AuthorsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAuthor\n                        \n                    \n                \n            \n            \n                \ncreateAuthor(createAuthorInput: CreateAuthorInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/authors/authors.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthorInput\n                                    \n                                                CreateAuthorInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'authors'})\n                \n            \n\n            \n                \n                    Defined in src/authors/authors.resolver.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'author'})\n                \n            \n\n            \n                \n                    Defined in src/authors/authors.resolver.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAuthor\n                        \n                    \n                \n            \n            \n                \nremoveAuthor(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/authors/authors.resolver.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthor\n                        \n                    \n                \n            \n            \n                \nupdateAuthor(updateAuthorInput: UpdateAuthorInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/authors/authors.resolver.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateAuthorInput\n                                    \n                                                UpdateAuthorInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { AuthorsService } from './authors.service';\nimport { CreateAuthorInput } from './dto/create-author.input';\nimport { UpdateAuthorInput } from './dto/update-author.input';\nimport { Author } from './entities/author.entity';\n\n@Resolver(() => Author)\nexport class AuthorsResolver {\n  constructor(private readonly authorsService: AuthorsService) {}\n\n  @Mutation(() => Author)\n  createAuthor(\n    @Args('createAuthorInput') createAuthorInput: CreateAuthorInput,\n  ) {\n    return this.authorsService.create(createAuthorInput);\n  }\n\n  @Query(() => [Author], { name: 'authors' })\n  findAll() {\n    return this.authorsService.findAll();\n  }\n\n  @Query(() => Author, { name: 'author' })\n  findOne(@Args('id', { type: () => Int }) id: number) {\n    return this.authorsService.findOne(id);\n  }\n\n  @Mutation(() => Author)\n  updateAuthor(\n    @Args('updateAuthorInput') updateAuthorInput: UpdateAuthorInput,\n  ) {\n    return this.authorsService.update(updateAuthorInput.id, updateAuthorInput);\n  }\n\n  @Mutation(() => Author)\n  removeAuthor(@Args('id', { type: () => Int }) id: number) {\n    return this.authorsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorsService.html":{"url":"injectables/AuthorsService.html","title":"injectable - AuthorsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authors/authors.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAuthorInput: CreateAuthorInput)\n                \n            \n\n\n            \n                \n                    Defined in src/authors/authors.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthorInput\n                                    \n                                                CreateAuthorInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/authors/authors.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/authors/authors.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/authors/authors.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAuthorInput: UpdateAuthorInput)\n                \n            \n\n\n            \n                \n                    Defined in src/authors/authors.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorInput\n                                    \n                                                UpdateAuthorInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAuthorInput } from './dto/create-author.input';\nimport { UpdateAuthorInput } from './dto/update-author.input';\n\n@Injectable()\nexport class AuthorsService {\n  create(createAuthorInput: CreateAuthorInput) {\n    console.log(createAuthorInput);\n    return 'This action adds a new author';\n  }\n\n  findAll() {\n    return `This action returns all authors`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} author`;\n  }\n\n  update(id: number, updateAuthorInput: UpdateAuthorInput) {\n    return `This action updates a #${id} author`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} author`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheInterceptor.html":{"url":"classes/CacheInterceptor.html","title":"class - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/cache.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/cache.interceptor.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, NestInterceptor } from '@nestjs/common';\nimport { Observable, of } from 'rxjs';\nexport class CacheInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    const isCached = true;\n    if (isCached) {\n      return of([]);\n    }\n\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/cat.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/schema/cat.schema.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/cat.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/cat.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/cat.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/cat.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/cat.schema.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Exclude } from 'class-transformer';\nimport { Document } from 'mongoose';\n\nexport type CatDocument = Cat & Document;\n\n@Schema()\nexport class Cat {\n  @Prop({ required: true })\n  id: number;\n  @Prop()\n  name: string;\n  @Prop()\n  age: number;\n\n  @Prop()\n  breed: string;\n\n  @Prop()\n  // @Optional()\n  @Exclude()\n  password: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\nexport const CatSchema = SchemaFactory.createForClass(Cat);\n\n// CatSchema.pre('save', (doc: any) => {\n//   console.log(doc.id);\n//   console.log('Im here before saving!');\n// });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CatType.html":{"url":"interfaces/CatType.html","title":"interface - CatType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CatType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/cat.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            breed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CatType {\n  id: number;\n  name: string;\n  age: number;\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles('admin', 'user')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(params: FindOneParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseInterceptors(ClassSerializerInterceptor)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindOneParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  Param,\n  Post,\n  UploadedFile,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Roles } from '../decorators/roles.decorator';\nimport { AllExceptionsFilter } from './../exception-filters/all-exception.filters';\nimport { RolesGuard } from './../guards/roles.guard';\nimport { TimeoutInterceptor } from './../interceptors/timeout.interceptor';\nimport { TransformInterceptor } from './../interceptors/transform.interceptor';\nimport { ValidationPipe } from './../pipes/validation.pipe';\nimport { CatsService } from './cats.service';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { CatType } from './interfaces/cat.interface';\nimport { CreateCat } from './interfaces/create-cat.interface';\nimport { FindOneParams } from './validation/cat.findOnaParams';\n\n@Controller('cats')\n@UseFilters(AllExceptionsFilter)\n@UseGuards(RolesGuard)\n@UseInterceptors(TransformInterceptor, TimeoutInterceptor)\nexport class CatsController {\n  constructor(\n    private catService: CatsService, // @Inject('CONNECTION') private connect, // @Inject(CACHE_MANAGER) private cacheManager: Cache,\n  ) {}\n\n  @Post()\n  @Roles('admin', 'user')\n  // @UsePipes(new JoiValidationPipe(createCatSchema))\n  async create(\n    @Body(new ValidationPipe()) createCatDto: CreateCatDto,\n  ): Promise {\n    // console.log('Injected', this.connect);\n    this.catService.create(createCatDto);\n    return { message: 'Cat is created!' };\n  }\n\n  @Get()\n  async findAll(): Promise {\n    return this.catService.findAll();\n  }\n\n  @Get(':id')\n  @UseInterceptors(ClassSerializerInterceptor)\n  findOne(@Param() params: FindOneParams) {\n    return this.catService.findOne(params.id);\n  }\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('file', { dest: 'upload' }))\n  uploadFile(@UploadedFile() file: Express.Multer.File) {\n    console.log('File', file);\n    return 'Hello';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsDemoController.html":{"url":"controllers/CatsDemoController.html","title":"controller - CatsDemoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsDemoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cat.controller.demo.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCat\n                            \n                            \n                                findAll\n                            \n                            \n                                getAnyRoute\n                            \n                            \n                                observable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCat\n                        \n                    \n                \n            \n            \n                \ncreateCat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/cats/cat.controller.demo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(req: Request, res: Response, name: string, body: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cat.controller.demo.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Response\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnyRoute\n                        \n                    \n                \n            \n            \n                \ngetAnyRoute(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('ab*cd')\n                \n            \n\n            \n                \n                    Defined in src/cats/cat.controller.demo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        observable\n                        \n                    \n                \n            \n            \n                \nobservable()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('observable')\n                \n            \n\n            \n                \n                    Defined in src/cats/cat.controller.demo.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        // This is Just Demo\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  Post,\n  Req,\n  Res,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Observable, of } from 'rxjs';\nimport { User } from 'src/decorators/user.decorator';\nimport { CatsService } from './cats.service';\nimport { CreateCatDto } from './dto/create-cat.dto';\n\n@Controller('cats')\nexport class CatsDemoController {\n  constructor(private catService: CatsService) {}\n  // Recommended way\n  // @UseFilters(new HttpExceptionFilter())\n  @Post()\n  @HttpCode(200) // default 200\n  createCat(): any {\n    // throw new ForbiddenException();\n    return { message: 'This will create a cat!' };\n  }\n\n  @Get()\n  findAll(\n    @Req() req: Request,\n    @Res({ passthrough: true }) res: Response,\n    @User('name') name: string,\n    @Body() body: CreateCatDto,\n  ): Response {\n    console.log('UserName', name);\n    console.log(req.body, req.params, req.query);\n    console.log(body);\n    const result = 'Returning ALL cats from GET-findALL';\n    return res.status(200).json(result);\n  }\n\n  @Get('ab*cd')\n  getAnyRoute(@Req() req: Request): void {\n    console.log('This will get any route for ab_cd, wildcard!');\n    console.log(req.url);\n  }\n\n  @Get('observable')\n  observable(): Observable {\n    return of([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Cat, CatSchema } from '../schema/cat.schema';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Module({\n  imports: [\n    // MulterModule.registerAsync({\n    //   useClass: MulterConfigService,\n    // }),\n    MongooseModule.forFeature([{ name: Cat.name, schema: CatSchema }], 'cats'),\n  ],\n  controllers: [CatsController],\n  providers: [\n    CatsService,\n    {\n      // https://docs.nestjs.com/fundamentals/dynamic-modules#community-guidelines\n      provide: 'CONNECTION',\n      useValue: 'Connection Value',\n    },\n  ],\n  exports: [CatsService], // will share the same instance to other modules https://docs.nestjs.com/modules\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catModel: Model, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Cat, CatDocument } from '../schema/cat.schema';\n\ninterface EnvVariables {\n  port: string;\n  database: {\n    url: string;\n  };\n}\n@Injectable()\nexport class CatsService {\n  constructor(\n    @InjectModel(Cat.name) private catModel: Model,\n    private configService: ConfigService,\n  ) {}\n\n  async create(cat: Cat) {\n    console.log(cat);\n    const createdCat = new this.catModel(cat);\n    return createdCat.save();\n  }\n\n  async findAll(): Promise {\n    const url = this.configService.get('database.url', { infer: true });\n    console.log('Url', url);\n    return await this.catModel.find().lean();\n  }\n\n  async findOne(id: string): Promise {\n    const cat = await this.catModel.findOne({ _id: id }).lean();\n    if (!cat) return null;\n    return new Cat(cat); // Serialization - will transform and remove, password property from response\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/common.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { CatsModule } from './cats.module';\n\n@Module({\n  // Module forward reference\n  imports: [forwardRef(() => CatsModule)],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/common.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catService: CatsService)\n                    \n                \n                        \n                            \n                                Defined in src/cats/common.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catService\n                                                  \n                                                        \n                                                                        CatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { CatsService } from './cats.service';\n\n@Injectable()\nexport class CommonService {\n  constructor(\n    // Solve, Circular Dependency using forwardRef - same will be in catService\n    @Inject(forwardRef(() => CatsService)) private catService: CatsService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorInput.html":{"url":"classes/CreateAuthorInput.html","title":"class - CreateAuthorInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authors/dto/create-author.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exampleField\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        exampleField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Example field (placeholder)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authors/dto/create-author.input.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, Int, Field } from '@nestjs/graphql';\n\n@InputType()\nexport class CreateAuthorInput {\n  @Field(() => Int, { description: 'Example field (placeholder)' })\n  exampleField: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateCat.html":{"url":"interfaces/CreateCat.html","title":"interface - CreateCat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateCat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/create-cat.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateCat {\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create-cat.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create-cat.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create-cat.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create-cat.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Optional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create-cat.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Optional } from '@nestjs/common';\nimport { IsInt, IsString } from 'class-validator';\n\nexport class CreateCatDto {\n  @IsInt()\n  id: number;\n\n  @IsString()\n  name: string;\n\n  @IsInt()\n  age: number;\n\n  @IsString()\n  breed: string;\n\n  @IsString()\n  @Optional()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOrderDto {\n  name: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderEvent.html":{"url":"classes/CreateOrderEvent.html","title":"class - CreateOrderEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/events/create-order.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                order\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(order: CreateOrderDto)\n                    \n                \n                        \n                            \n                                Defined in src/orders/events/create-order.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        CreateOrderDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOrderDto\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/events/create-order.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateOrderDto } from '../dto/create-order.dto';\n\nexport class CreateOrderEvent {\n  constructor(public order: CreateOrderDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateOrderListener.html":{"url":"injectables/CreateOrderListener.html","title":"injectable - CreateOrderListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateOrderListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/listeners/created-order.listeners.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleOrderCreatedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleOrderCreatedEvent\n                        \n                    \n                \n            \n            \n                \nhandleOrderCreatedEvent(event: CreateOrderEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('order.create')\n                \n            \n\n            \n                \n                    Defined in src/orders/listeners/created-order.listeners.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateOrderEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { CreateOrderEvent } from '../events/create-order.event';\n\n@Injectable()\nexport class CreateOrderListener {\n  @OnEvent('order.create')\n  handleOrderCreatedEvent(event: CreateOrderEvent) {\n    console.log('Order.create Listener');\n    console.log(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvVariables.html":{"url":"interfaces/EnvVariables.html","title":"interface - EnvVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Cat, CatDocument } from '../schema/cat.schema';\n\ninterface EnvVariables {\n  port: string;\n  database: {\n    url: string;\n  };\n}\n@Injectable()\nexport class CatsService {\n  constructor(\n    @InjectModel(Cat.name) private catModel: Model,\n    private configService: ConfigService,\n  ) {}\n\n  async create(cat: Cat) {\n    console.log(cat);\n    const createdCat = new this.catModel(cat);\n    return createdCat.save();\n  }\n\n  async findAll(): Promise {\n    const url = this.configService.get('database.url', { infer: true });\n    console.log('Url', url);\n    return await this.catModel.find().lean();\n  }\n\n  async findOne(id: string): Promise {\n    const cat = await this.catModel.findOne({ _id: id }).lean();\n    if (!cat) return null;\n    return new Cat(cat); // Serialization - will transform and remove, password property from response\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorsInterceptor.html":{"url":"classes/ErrorsInterceptor.html","title":"class - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/errors.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/errors.interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadGatewayException,\n  CallHandler,\n  ExecutionContext,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { catchError, Observable, throwError } from 'rxjs';\n\nexport class ErrorsInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next\n      .handle()\n      .pipe(\n        catchError((err) => throwError(() => new BadGatewayException(err))),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindOneParams.html":{"url":"classes/FindOneParams.html","title":"class - FindOneParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindOneParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/validation/cat.findOnaParams.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/validation/cat.findOnaParams.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class FindOneParams {\n  @IsString()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  HttpHealthIndicator,\n  MongooseHealthIndicator,\n} from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private db: MongooseHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n      () => this.db.pingCheck('mongodb'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exception-filters/http-exception.filters.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/exception-filters/http-exception.filters.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const statusCode = exception.getStatus();\n\n    response.status(statusCode).json({\n      statusCode,\n      timeStamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/joiValidation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: ObjectSchema)\n                    \n                \n                        \n                            \n                                Defined in src/pipes/joiValidation.pipe.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    ObjectSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/joiValidation.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { ObjectSchema } from 'joi';\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private schema: ObjectSchema) {}\n\n  transform(value: any, metadata: ArgumentMetadata) {\n    const { error } = this.schema.validate(value);\n\n    if (error) {\n      throw new BadRequestException('Validation Failed!');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LazyModule.html":{"url":"modules/LazyModule.html","title":"module - LazyModule","body":"\n                   \n\n\n\n\n    Modules\n    LazyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LazyModule\n\n\n\ncluster_LazyModule_exports\n\n\n\ncluster_LazyModule_imports\n\n\n\n\nLazyService\n\nLazyService\n\n\n\nLazyModule\n\nLazyModule\n\nLazyModule -->\n\nLazyService->LazyModule\n\n\n\n\n\nLazyService \n\nLazyService \n\nLazyService  -->\n\nLazyModule->LazyService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lazy/lazy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LazyService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LazyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LazyService } from './laze.service';\n\n@Module({\n  imports: [LazyService],\n  exports: [LazyService],\n})\nexport class LazyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LazyService.html":{"url":"injectables/LazyService.html","title":"injectable - LazyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LazyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lazy/laze.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/lazy/laze.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LazyService {\n  getAll() {\n    return 'Hello THere!! Lazy Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(userId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { User } from 'src/users/users.service';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(userId: number, password: string): Promise {\n    console.log('Im reaching here!');\n    const user = await this.authService.validateUser(userId, password);\n    console.log(user);\n    if (!user) {\n      throw new HttpException('error', 302);\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/logging.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    console.log('Before....');\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(tap(() => console.log(`After.....${Date.now() - now}ms `)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/multer/multer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/multer/multer.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterOptions | Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MulterOptionsFactory } from '@nestjs/platform-express';\nimport { MulterOptions } from '@nestjs/platform-express/multer/interfaces/multer-options.interface';\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  createMulterOptions(): MulterOptions | Promise {\n    return {\n      dest: '../upload',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Order {\n  id: number;\n  name: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/orders/orders.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrdersService } from './orders.service';\n\n@Controller('orders')\nexport class OrdersController {\n  constructor(private orderService: OrdersService) {}\n\n  @Post()\n  create(@Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(createOrderDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nCreateOrderListener\n\nCreateOrderListener\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nCreateOrderListener->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateOrderListener\n                        \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CreateOrderListener } from './listeners/created-order.listeners';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './orders.service';\n\n@Module({\n  controllers: [OrdersController],\n  providers: [OrdersService, CreateOrderListener],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                orders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/orders/orders.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      name: 'Order #1',\n      description: 'Order #1 Description',\n    },\n    {\n      id: 2,\n      name: 'Order #2',\n      description: 'Order #2 Description',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/orders/orders.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { Order } from './entities/order.entity';\nimport { CreateOrderEvent } from './events/create-order.event';\n\n@Injectable()\nexport class OrdersService {\n  public orders: Order[] = [\n    {\n      id: 1,\n      name: 'Order #1',\n      description: 'Order #1 Description',\n    },\n    {\n      id: 2,\n      name: 'Order #2',\n      description: 'Order #2 Description',\n    },\n  ];\n\n  constructor(private eventEmitter: EventEmitter2) {}\n\n  create(createOrderDto: CreateOrderDto) {\n    const order = {\n      id: this.orders.length + 1,\n      ...createOrderDto,\n    };\n\n    this.orders.push(order);\n\n    const createdOrderEvent = new CreateOrderEvent({\n      name: order.name,\n      description: order.description,\n    });\n\n    this.eventEmitter.emit('order.create', createdOrderEvent);\n\n    return order;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(map((data) => (data === null ? '' : data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const userRole = request.query.role;\n    // console.log(userRole);\n    return userRole === 'admin' ? true : false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutInterceptor.html":{"url":"classes/TimeoutInterceptor.html","title":"class - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/timeout.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/timeout.interceptor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  NestInterceptor,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport {\n  catchError,\n  Observable,\n  throwError,\n  timeout,\n  TimeoutError,\n} from 'rxjs';\n\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError((err) => {\n        console.log(err);\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n\n        return throwError(() => err);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/transform.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(map((data) => (data === null ? '' : data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthorInput.html":{"url":"classes/UpdateAuthorInput.html","title":"class - UpdateAuthorInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthorInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authors/dto/update-author.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authors/dto/update-author.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateAuthorInput } from './create-author.input';\nimport { InputType, Field, Int, PartialType } from '@nestjs/graphql';\n\n@InputType()\nexport class UpdateAuthorInput extends PartialType(CreateAuthorInput) {\n  @Field(() => Int)\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserEntity.html":{"url":"interfaces/UserEntity.html","title":"interface - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/user.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nexport const User = createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n    return data ? user?.[data] : user;\n  },\n);\n\nexport interface UserEntity {\n  id: number;\n  name: string;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      username: 'User #1',\n      password: 'user1',\n    },\n    {\n      id: 2,\n      username: 'User #2',\n      password: 'user2',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nexport type User = {\n  id: number;\n  username: string;\n  password: string;\n};\n\n@Injectable()\nexport class UsersService {\n  private readonly users: User[] = [\n    {\n      id: 1,\n      username: 'User #1',\n      password: 'user1',\n    },\n    {\n      id: 2,\n      username: 'User #2',\n      password: 'user2',\n    },\n  ];\n\n  async findOne(id: number): Promise {\n    console.log('Im here');\n    const users = this.users.find((el) => el.id === id);\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/validation.pipe.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/validation.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length) {\n      console.log(errors);\n      throw new BadRequestException(JSON.stringify(errors[0].constraints));\n    }\n\n    return value;\n  }\n\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authors/authors.resolver.ts\n            \n            class\n            AuthorsResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/authors/authors.service.ts\n            \n            injectable\n            AuthorsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/authors/dto/create-author.input.ts\n            \n            class\n            CreateAuthorInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authors/dto/update-author.input.ts\n            \n            class\n            UpdateAuthorInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authors/entities/author.entity.ts\n            \n            class\n            Author\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cat.controller.demo.ts\n            \n            controller\n            CatsDemoController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            interface\n            EnvVariables\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/cats.validation.ts\n            \n            variable\n            createCatSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            CatType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/interfaces/create-cat.interface.ts\n            \n            interface\n            CreateCat\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/validation/cat.findOnaParams.ts\n            \n            class\n            FindOneParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            interface\n            UserEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exception-filters/all-exception.filters.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exception-filters/http-exception.filters.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGaurd\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/cache.interceptor.ts\n            \n            class\n            CacheInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/errors.interceptor.ts\n            \n            class\n            ErrorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/timeout.interceptor.ts\n            \n            class\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lazy/laze.service.ts\n            \n            injectable\n            LazyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/logger.middleware.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/multer/multer.service.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/orders/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orders/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orders/events/create-order.event.ts\n            \n            class\n            CreateOrderEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orders/listeners/created-order.listeners.ts\n            \n            injectable\n            CreateOrderListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pipes/joiValidation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/schema/cat.schema.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/schema/cat.schema.ts\n            \n            variable\n            CatSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^0.0.8\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/event-emitter : ^1.1.1\n        \n            @nestjs/graphql : ^10.0.13\n        \n            @nestjs/mongoose : ^9.0.3\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/terminus : ^8.0.6\n        \n            cache-manager : ^3.6.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            joi : ^17.6.0\n        \n            mongoose : ^6.3.3\n        \n            passport : ^0.4.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LazyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorsModule\n\n\n\ncluster_AuthorsModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_LazyModule\n\n\n\ncluster_LazyModule_imports\n\n\n\ncluster_LazyModule_exports\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nLocalAuthGuard \n\nLocalAuthGuard \n\nLocalAuthGuard  -->\n\nAuthModule->LocalAuthGuard \n\n\n\n\n\nAuthorsModule\n\nAuthorsModule\n\nAppModule -->\n\nAuthorsModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalAuthGuard\n\nLocalAuthGuard\n\nAuthModule -->\n\nLocalAuthGuard->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nAuthorsService\n\nAuthorsService\n\nAuthorsModule -->\n\nAuthorsService->AuthorsModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nLazyService\n\nLazyService\n\n\n\nLazyModule\n\nLazyModule\n\nLazyModule -->\n\nLazyService->LazyModule\n\n\n\n\n\nLazyService \n\nLazyService \n\nLazyService  -->\n\nLazyModule->LazyService \n\n\n\n\n\nCreateOrderListener\n\nCreateOrderListener\n\nOrdersModule -->\n\nCreateOrderListener->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CatDocument   (src/.../cat.schema.ts)\n                        \n                        \n                            User   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schema/cat.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CatDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/users.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CatSchema   (src/.../cat.schema.ts)\n                        \n                        \n                            createCatSchema   (src/.../cats.validation.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schema/cat.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CatSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Cat)\n                    \n                \n\n\n        \n    \n\n    src/cats/cats.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCatSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  id: Joi.number(),\n  name: Joi.string(),\n  age: Joi.number(),\n  breed: Joi.string(),\n})\n                    \n                \n\n\n        \n    \n\n    src/middlewares/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req: Request, res: Response, next: NextFunction) => {\n  console.log('Logger Middleware Request....');\n  next();\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n    src/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n    return data ? user?.[data] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
